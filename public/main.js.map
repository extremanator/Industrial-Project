{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/code-problem/code-problem.component.css","webpack:///./src/app/components/code-problem/code-problem.component.html","webpack:///./src/app/components/code-problem/code-problem.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/language/language.component.css","webpack:///./src/app/components/language/language.component.html","webpack:///./src/app/components/language/language.component.ts","webpack:///./src/app/components/leaderboard/leaderboard.component.css","webpack:///./src/app/components/leaderboard/leaderboard.component.html","webpack:///./src/app/components/leaderboard/leaderboard.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/public-profile/public-profile.component.css","webpack:///./src/app/components/public-profile/public-profile.component.html","webpack:///./src/app/components/public-profile/public-profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/statistics/statistics.component.css","webpack:///./src/app/components/statistics/statistics.component.html","webpack:///./src/app/components/statistics/statistics.component.ts","webpack:///./src/app/components/test-problem/test-problem.component.css","webpack:///./src/app/components/test-problem/test-problem.component.html","webpack:///./src/app/components/test-problem/test-problem.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/test.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/problem.service.ts","webpack:///./src/app/services/test.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { CodeProblemComponent } from './components/code-problem/code-problem.component';\nimport { CodemirrorModule } from \"@ctrl/ngx-codemirror\";\nimport { StatisticsComponent } from './components/statistics/statistics.component';\nimport { AdminGuard } from \"./guards/admin.guard\";\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\nimport { LanguageComponent } from './components/language/language.component';\nimport { LeaderboardComponent } from './components/leaderboard/leaderboard.component';\nimport { TestComponent } from './components/test/test.component';\nimport { TestProblemComponent } from './components/test-problem/test-problem.component';\nimport { TestGuard } from \"./guards/test.guard\";\n\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/addon/edit/closebrackets';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'problems', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'leaderboard', component: LeaderboardComponent, canActivate: [AuthGuard]},\n  {path: 'test', component: TestComponent, canActivate: [AuthGuard]},\n  {path: 'test/problem', component: TestProblemComponent, canActivate: [AuthGuard, TestGuard]},\n  {path: 'stats', component: StatisticsComponent, canActivate: [AuthGuard, AdminGuard]},\n  {path: 'problems/:name', component: CodeProblemComponent, canActivate: [AuthGuard]},\n  {path: 'user/:username', component: PublicProfileComponent, canActivate: [AuthGuard]},\n  {path: 'language/:language/:filters', component: LanguageComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    CodeProblemComponent,\n    StatisticsComponent,\n    PublicProfileComponent,\n    LeaderboardComponent,\n    LanguageComponent,\n    TestComponent,\n    TestProblemComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    CodemirrorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29kZS1wcm9ibGVtL2NvZGUtcHJvYmxlbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br/>\\n<h1>{{(problem === undefined)?'':problem.name}}</h1>\\n<p style=\\\"white-space: pre-wrap;\\\">{{(problem === undefined)?'':problem.paragraph}}</p>\\n<ngx-codemirror [(ngModel)]=\\\"solution_code\\\"\\n                [options]=\\\"{\\n                  lineNumbers: true,\\n                  theme: 'material',\\n                  mode: 'text/x-c++src',\\n                  indentUnit: 4,\\n                  indentWithTabs: true,\\n                  autoCloseBrackets: true\\n                }\\\">{{solution_code}}</ngx-codemirror>\\n<br/>\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitSolution(solution_code)\\\">Submit</button>\\n<br/>\\n<div *ngIf=\\\"isSuccess != undefined\\\">{{feedback_msg}}</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\n\n@Component({\n  selector: 'app-code-problem',\n  templateUrl: './code-problem.component.html',\n  styleUrls: ['./code-problem.component.css']\n})\n\nexport class CodeProblemComponent implements OnInit {\n  problem: Problem;\n  solution_code: string;\n  isSuccess: any;\n  feedback_msg: any;\n\n  constructor(private route: ActivatedRoute,\n              private problemService: ProblemService) { }\n\n  getProblem(){\n    const name = this.route.snapshot.paramMap.get('name');\n    this.problemService.getProblem(name).subscribe(problem => {\n      this.problem = problem.problem;\n      this.solution_code = problem.problem.code;\n    });\n  }\n\n  onSubmitSolution(submitted_code: string){\n    this.problemService.testProblemSolution(this.problem.name, submitted_code).subscribe((res) => {\n      this.isSuccess = res.success;\n      this.feedback_msg = res.msg;\n    });\n  }\n\n\n  ngOnInit() {\n    this.getProblem();\n  }\n\n}\n","module.exports = \".page-header{\\r\\n  text-align: center;\\r\\n}\\r\\n.language-name{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4ubGFuZ3VhZ2UtbmFtZXtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<div class=\\\"jumbotron cpp change-cursor\\\" routerLink=\\\"/language/cpp/::\\\">\\n  <h2 class=\\\"language-name\\\">C++</h2>\\n</div>\\n<div class=\\\"jumbotron java change-cursor\\\" routerLink=\\\"/language/java/::\\\">\\n  <h2 class=\\\"language-name\\\">Java</h2>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Cyber-Trainer</h1>\\n  <p class=\\\"lead\\\">Welcome to our project</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express Backend</h3>\\n    <p>A rock solid blah</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI</h3>\\n    <p>A paper solid blah</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>A scissors solid blah</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".problems{\\r\\n  display: table-cell;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.filters{\\r\\n  display: table-cell;\\r\\n  margin-left: 20px;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYW5ndWFnZS9sYW5ndWFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7QUFDWjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYW5ndWFnZS9sYW5ndWFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2JsZW1ze1xyXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLmZpbHRlcnN7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBtYXJnaW4tbGVmdDogMjBweDtcclxuICB3aWR0aDogYXV0bztcclxufVxyXG4iXX0= */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">{{language}}</h2>\\n<div class=\\\"problems\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n      <th scope=\\\"col\\\"></th>\\n      <th scope=\\\"col\\\">Difficulty</th>\\n      <th scope=\\\"col\\\">Points</th>\\n      <th scope=\\\"col\\\">Date of Solution</th>\\n      <th scope=\\\"col\\\">Solved</th>\\n    </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"problemInfo\\\">\\n      <tr *ngFor=\\\"let problem of problems\\\" (click)=\\\"onClickProblem(problem.name)\\\" class=\\\"change-cursor\\\">\\n        <th scope=\\\"row\\\">{{problem.name}}</th>\\n        <td>{{problem.difficulty}}</td>\\n        <td>{{problem.points}}</td>\\n        <td>{{(problemInfo.get(problem.name) === undefined)?'':(problemInfo.get(problem.name).dateSol)}}</td>\\n        <td>\\n          <div *ngIf=\\\"(problemInfo.get(problem.name)===undefined)?false:(problemInfo.get(problem.name).solved == true); else elseBlock\\\">&#10004;</div>\\n          <ng-template #elseBlock>&#10060;</ng-template>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<div class=\\\"filters\\\">\\n  <fieldset>\\n    <legend>Difficulty</legend>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficulty1\\\" [(ngModel)]=\\\"filterEasy\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficulty1\\\">Easy</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficutly2\\\" [(ngModel)]=\\\"filterMedium\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficutly2\\\">Medium</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficulty3\\\" [(ngModel)]=\\\"filterHard\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficulty3\\\">Hard</label>\\n      </div>\\n    </div>\\n    <legend>Category</legend>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category1\\\" [(ngModel)]=\\\"filterDCL\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category1\\\">Declarations and Initialization</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category2\\\" [(ngModel)]=\\\"filterEXP\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category2\\\">Expressions</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category3\\\" [(ngModel)]=\\\"filterINT\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category3\\\">Integers</label>\\n      </div>\\n    </div>\\n  </fieldset>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\ninterface Filters {\n  difficulties: Array<string>;\n  categories: Array<string>;\n}\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n  language: string;\n  routeLanguage: string;\n  problems: Problem[];\n  problemInfo: Map<string, {solved: boolean, dateSol: string}>;\n\n  filterEasy: boolean;\n  filterMedium: boolean;\n  filterHard: boolean;\n  filterDCL: boolean;\n  filterEXP: boolean;\n  filterINT: boolean;\n\n  constructor(private problemService: ProblemService,\n              private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  getLanguageProblems(language: string, filters: Filters){\n    this.problemService.getLanguageProblems(language).subscribe(problemsWrapper => {\n      const temp = problemsWrapper.problems;\n      this.problems = [];\n      for (let problem of temp){\n        let hasDifficulty = false;\n        if (filters.difficulties.length === 0)\n          hasDifficulty = true;\n        else {\n          for (let difficulty of filters.difficulties) {\n            if (problem.category.includes(difficulty)) {\n              hasDifficulty = true;\n              break;\n            }\n          }\n        }\n        let hasCategory = false;\n        if (filters.categories.length === 0)\n          hasCategory = true;\n        else {\n          for (let category of filters.categories) {\n            if (problem.category.includes(category)) {\n              hasCategory = true;\n              break;\n            }\n          }\n        }\n        if(hasCategory && hasDifficulty){\n          this.problems.push(problem);\n        }\n      }\n      this.problems.sort((obj1, obj2) => {\n        return (obj1.name > obj2.name)?1:-1;\n      });\n      this.authService.getProfile().subscribe(profile => {\n        const info = profile.user.attempted_problems;\n        let temp_info: Map<string, {solved: boolean, dateSol: string}> = new Map();\n        for (let problem of this.problems){\n          if(info.hasOwnProperty(problem.name)){\n            temp_info.set(problem.name, {solved: info[problem.name].solved , dateSol: info[problem.name].dateSol});\n          } else {\n            temp_info.set(problem.name, {solved: false, dateSol: 'TBD'});\n          }\n        }\n        this.problemInfo = temp_info;\n      });\n    });\n  }\n\n  onClickProblem(problem_name: string){\n    this.router.navigate([`/problems/${problem_name}`]);\n  }\n\n  updateFilter(){\n    let filters = \":\";\n    if (this.filterEasy){\n      filters += 'easy:';\n    }\n    if (this.filterMedium){\n      filters += 'medium:';\n    }\n    if (this.filterHard){\n      filters += 'hard:';\n    }\n    filters += ':';\n    if (this.filterDCL){\n      filters += 'DCL:';\n    }\n    if (this.filterEXP){\n      filters += 'EXP:';\n    }\n    if (this.filterINT){\n      filters += 'INT:';\n    }\n    this.router.navigate([`/language/${this.routeLanguage}/${filters}`]);\n  }\n\n  getFilters(filters: string): Filters{\n    let difficulties = [];\n    let i;\n    while(filters[1] != ':'){\n       i = filters.indexOf(':', 1);\n       difficulties.push(filters.slice(1, i));\n       filters = filters.slice(i, filters.length);\n    }\n    filters = filters.slice(1, filters.length);\n    let categories = [];\n    while(filters != ':'){\n      i = filters.indexOf(':', 1);\n      categories.push(filters.slice(1, i));\n      filters = filters.slice(i, filters.length);\n    }\n    return {difficulties: difficulties, categories: categories};\n  }\n\n  ngOnInit() {\n    this.problemInfo = null;\n    this.route.params.subscribe(routeParams => {\n      this.routeLanguage = routeParams.language;\n      switch (routeParams.language){\n        case 'cpp':\n          this.language = 'C++';\n          break;\n        case 'java':\n          this.language = 'Java';\n          break;\n        default:\n          this.language = '';\n          break;\n      }\n      const filters = this.getFilters(routeParams.filters);\n      if(filters.difficulties.includes('easy'))\n        this.filterEasy = true;\n      if(filters.difficulties.includes('medium'))\n        this.filterMedium = true;\n      if(filters.difficulties.includes('hard'))\n        this.filterHard = true;\n      if(filters.categories.includes('DCL'))\n        this.filterDCL = true;\n      if(filters.categories.includes('EXP'))\n        this.filterEXP = true;\n      if(filters.categories.includes('INT'))\n        this.filterINT = true;\n      this.getLanguageProblems(routeParams.language, filters);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGVhZGVyYm9hcmQvbGVhZGVyYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Username</th>\\n    <th scope=\\\"col\\\">Join Date</th>\\n    <th scope=\\\"col\\\">Number of Problems Solved</th>\\n    <th scope=\\\"col\\\">Total Points</th>\\n  </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"users\\\">\\n  <tr *ngFor=\\\"let user of users\\\" routerLink=\\\"/user/{{user.username}}\\\" class=\\\"change-cursor\\\">\\n    <th scope=\\\"row\\\">{{user.username}}</th>\\n    <td>{{user.join_date}}</td>\\n    <td>{{user.num_solved}}</td>\\n    <td>{{user.total_points}}</td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from \"../../user\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.css']\n})\nexport class LeaderboardComponent implements OnInit {\n  users: User[];\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  getAllUsers(){\n    this.authService.getAllUsers().subscribe(users => {\n      this.users = users;\n      this.users.sort((obj1,obj2) => {\n        let points_diff = obj2.total_points - obj1.total_points;\n        if (points_diff != 0) return points_diff;\n        else {\n          return (obj2.username > obj1.username)? 1 : -1;\n        }\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.getAllUsers();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timout: 5000});\n        this.router.navigate(['/problems']);\n      } else{\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timout: 5000});\n        this.router.navigate(['/login']);\n        this.password = '';\n      }\n    });\n  }\n}\n","module.exports = \".search-results{\\r\\n  position: absolute;\\r\\n  width: 204px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlYXJjaC1yZXN1bHRze1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMjA0cHg7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Rafael-Project</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto navbar-left\\\">\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/problems']\\\">Problems</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/test']\\\">Tests</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/leaderboard']\\\">Leaderboard</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn() && authService.isAdmin()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/stats']\\\">Stats</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input #searchBox id=\\\"search-box\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (input)=\\\"search(searchBox.value)\\\">\\r\\n      </form>\\r\\n      <ul class=\\\"list-group search-results\\\">\\r\\n        <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" *ngFor=\\\"let user of users$ | async\\\" >\\r\\n          <a routerLink=\\\"/user/{{user.username}}\\\">\\r\\n            {{user.username}}\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { Observable, Subject } from \"rxjs\";\nimport { User } from \"../../user\";\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  users$: Observable<User[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n    this.users$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.authService.searchUsers(term))\n    )\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  search(term: string){\n    this.searchTerms.next(term);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<br/>\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Join Date: {{user.join_date}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solved Problems: {{user.num_solved}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solution Attempts: {{user.num_attempted}}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n      (err) => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHVibGljLXByb2ZpbGUvcHVibGljLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Join Date: {{user.join_date}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solved Problems: {{user.num_solved}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solution Attempts: {{user.num_attempted}}</li>\\n    <div class=\\\"jumbotron\\\">\\n      <p class=\\\"lead\\\" style=\\\"white-space: pre-line\\\">{{attempted_problems}}{{solved_problems}}</p>\\n    </div>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n  user: any;\n  attempted_problems: string;\n  solved_problems: string;\n\n  constructor(private route: ActivatedRoute,\n              private authService: AuthService) { }\n\n  getUser(username: string){\n    this.authService.getUserInfo(username).subscribe(data => {\n      this.user = data.user;\n      if (data.user.num_attempted == 0){\n        this.attempted_problems = `${username} hasn't even tried solving something. What a loser!`;\n        this.solved_problems = \"\";\n      } else {\n        this.attempted_problems += `${username} has attempted: `;\n        if (data.user.num_solved == 0) {\n          for (let name in data.user.attempted_problems) {\n            if (this.attempted_problems === `${username} has attempted: `) {\n              this.attempted_problems += name;\n            } else {\n              this.attempted_problems += `, ${name}`;\n            }\n          }\n          this.solved_problems += \"\\nBut hasn't solved anything. What a loser!\";\n        } else {\n          this.solved_problems += `\\n${username} has solved: `;\n          for (let name in data.user.attempted_problems) {\n            if (this.attempted_problems === `${username} has attempted: `) {\n              this.attempted_problems += name;\n            } else {\n              this.attempted_problems += `, ${name}`;\n            }\n            if (data.user.attempted_problems[name].solved){\n              if (this.solved_problems === `\\n${username} has solved: `) {\n                this.solved_problems += name;\n              } else {\n                this.solved_problems += `, ${name}`;\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(routeParams => {\n      this.attempted_problems = \"\";\n      this.solved_problems = \"\";\n      this.getUser(routeParams.username);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(private validateService: ValidateService,\n              private flashMessage: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\"Please fill in all fields\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n    // Validate Email\n    else if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please use a valid email\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe((data) => {\n        if (data.success) {\n          this.flashMessage.show(\"You are now registered and can log in\", { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/login']);\n        } else {\n          this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n          this.router.navigate(['/register']);\n        }\n      }\n    );\n  }\n}\n","module.exports = \".list {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  float: left;\\r\\n  width: 70%;\\r\\n  height: 1000px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zdGF0aXN0aWNzL3N0YXRpc3RpY3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxVQUFVO0VBQ1YsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdCB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5pbmZvIHtcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogNzAlO1xyXG4gIGhlaWdodDogMTAwMHB4O1xyXG59XHJcblxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"list\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <tbody class=\\\"body\\\">\\n    <tr class=\\\"change-cursor\\\" (click)=\\\"onClickGeneral()\\\" [class.table-active]=\\\"'General' === selected.name\\\">\\n      <th scope=\\\"row\\\">General</th>\\n    </tr>\\n    <tr *ngFor=\\\"let info of problemsInfo\\\" (click)=\\\"onClickProblem(info)\\\" class=\\\"change-cursor\\\" [class.table-active]=\\\"info.name === selected.name\\\">\\n      <th scope=\\\"row\\\">{{info.name}}</th>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<div class=\\\"info\\\">\\n  <br/>\\n  <h2 align=\\\"center\\\">{{selected.name}}</h2>\\n  <div *ngIf=\\\"selected.name === 'General'; else elseBlock\\\" class=\\\"jumbotron\\\">\\n    <p class=\\\"lead\\\">The number of users in the system is: {{selected.numUsers}}</p>\\n    <hr class=\\\"my-4\\\">\\n    <p>More interesting statistics. <i>Maybe leaderboard?!</i></p>\\n  </div>\\n  <ng-template #elseBlock>\\n    <div class=\\\"jumbotron\\\">\\n      <p class=\\\"lead\\\" style=\\\"white-space: pre-line\\\">{{selected.num_attempted}}<br>The number of users who solved the problem is: {{selected.num_solved}}.<br>\\n        {{selected.solvingUsers}}\\n        Average number of attempts until solution is: {{selected.avg_attempts}}.<br>\\n        {{selected.solved_percent}}% of users have solved this problem.</p>\\n      <hr class=\\\"my-4\\\">\\n      <p>More interesting statistics.</p>\\n    </div>\\n  </ng-template>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ProblemService} from \"../../services/problem.service\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  problems: any;\n  numUsers: number;\n  problemsInfo: Array<Object>;\n  selected: any;\n  generalInfo: any;\n\n  constructor(private problemService: ProblemService,\n              private authService: AuthService) { }\n\n  getAllProblems(){\n    this.problemService.getAllProblems().subscribe(problemsWrapper => {\n      this.problems = problemsWrapper.problems;\n      let temp_info = [];\n      this.authService.getNumUsers().subscribe((data) => {\n        this.numUsers = data.num_users;\n        for (let problem of this.problems){\n          let tot_attempts = 0;\n          let solvingUsers = '';\n          if (problem.solved_by !== undefined){\n            if (problem.num_solved > 1) {\n              let i = 1;\n              solvingUsers += 'The users are: ';\n              for (let name in problem.solved_by) {\n                if (solvingUsers === \"The users are: \") {\n                  solvingUsers += name;\n                } else if (i === problem.num_solved) {\n                  if(problem.num_solved !== 2)\n                    solvingUsers += ',';\n                  solvingUsers += ` and ${name}`;\n                } else{\n                    solvingUsers += `, ${name}`;\n                }\n                i++;\n                tot_attempts += problem.solved_by[name];\n              }\n              solvingUsers += '.\\n';\n            } else if(problem.num_solved === 1){\n              solvingUsers += 'The user is: ';\n              for (let name in problem.solved_by) {\n                solvingUsers += name;\n                tot_attempts += problem.solved_by[name];\n              }\n              solvingUsers += '.\\n';\n            } else {\n              solvingUsers += '\\n';\n            }\n          }\n          let text1;\n          if (problem.num_attempted !== 1){\n            text1 = `So far their have been ${problem.num_attempted} attempts to solve the problem.`;\n          } else {\n            text1 = `So far their has been ${problem.num_attempted} attempt to solve the problem.`;\n          }\n          temp_info.push({\n            name: problem.name,\n            solved_percent: ((problem.num_solved*100)/this.numUsers),\n            avg_attempts: (problem.num_solved === 0) ? 0 : tot_attempts/problem.num_solved,\n            num_solved: problem.num_solved,\n            num_attempted: text1,\n            solvingUsers: solvingUsers\n          });\n          this.generalInfo = { name: 'General', numUsers: data.num_users};\n          this.selected = this.generalInfo;\n        }\n        temp_info.sort((obj1, obj2) => {if (obj1.name > obj2.name) return 1; else return -1;});\n      });\n      this.problemsInfo = temp_info;\n    });\n  }\n\n  onClickGeneral(){\n    this.selected = this.generalInfo;\n  }\n\n  onClickProblem(name){\n    this.selected = name;\n  }\n\n  ngOnInit() {\n    this.generalInfo = {};\n    this.selected = {};\n    this.getAllProblems();\n  }\n  test(){\n    alert(\"hi\");\n  }\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC1wcm9ibGVtL3Rlc3QtcHJvYmxlbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br/>\\r\\n<h1 class=\\\"text-center\\\">Problem {{cur_prob+1}} of {{num_problems}}</h1>\\r\\n<div class=\\\"progress\\\">\\r\\n  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"progress\\\" [style.width.%]=\\\"(num_problems != 0)?(progress*100)/num_problems:10\\\"\\r\\n       aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"num_problems\\\"></div>\\r\\n</div>\\r\\n<hr class=\\\"my-4\\\">\\r\\n<h1>{{(problem === undefined)?'':problem.name}}</h1>\\r\\n<p style=\\\"white-space: pre-wrap;\\\">{{(problem === undefined)?'':problem.paragraph}}</p>\\r\\n<ngx-codemirror [(ngModel)]=\\\"solution_code\\\"\\r\\n                [options]=\\\"{\\r\\n                  lineNumbers: true,\\r\\n                  theme: 'material',\\r\\n                  mode: 'text/x-c++src',\\r\\n                  indentUnit: 4,\\r\\n                  indentWithTabs: true,\\r\\n                  autoCloseBrackets: true\\r\\n                }\\\">{{solution_code}}</ngx-codemirror>\\r\\n<br/>\\r\\n<div *ngIf=\\\"failed != true; else elseBlock\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitSolution(solution_code)\\\">Submit</button>\\r\\n</div>\\r\\n<ng-template #elseBlock>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/test\\\">Back to Test Menu</button>\\r\\n</ng-template>\\r\\n<br/>\\r\\n<div *ngIf=\\\"isSuccess != undefined\\\">{{feedback_msg}}</div>\\r\\n<div *ngIf=\\\"isSuccess == true && (cur_prob!=(num_problems-1))\\\">\\r\\n  <hr class=\\\"my-4\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"nextProblem()\\\">Next</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"isSuccess == true && (cur_prob==(num_problems-1))\\\">\\r\\n  <hr class=\\\"my-4\\\">\\r\\n  <p style=\\\"text-align: center\\\">========================================You Did It!!!!==============================================</p>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\nimport { TestService } from \"../../services/test.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-test-problem',\n  templateUrl: './test-problem.component.html',\n  styleUrls: ['./test-problem.component.css']\n})\nexport class TestProblemComponent implements OnInit {\n  cur_prob: number;\n  progress: number;\n  problems: Problem[];\n  problem: Problem;\n  solution_code: string;\n  isSuccess: any;\n  feedback_msg: any;\n  num_problems: number;\n  filters: Array<string>;\n  failed: boolean;\n\n  constructor(private problemService: ProblemService,\n              private testService: TestService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.failed = false;\n    this.cur_prob = 0;\n    this.progress = 0;\n    this.num_problems = this.testService.getNumProblems();\n    this.filters = this.testService.getFilters();\n    this.problemService.getAllProblems().subscribe((problemsArr) => {\n      let allProblems = problemsArr.problems;\n      let filteredProblems = [];\n      for (let problem of allProblems){\n        let hasCategory = false;\n        if (this.filters.length === 0){\n          hasCategory = true;\n        } else {\n          for (let category of this.filters) {\n            if (problem.category.includes(category)) {\n              hasCategory = true;\n              break;\n            }\n          }\n        }\n        if (hasCategory){\n          filteredProblems.push(problem);\n        }\n      }\n      this.shuffle(filteredProblems);\n      this.problems = filteredProblems;\n      if(this.problems.length == 0){\n        this.router.navigate(['/test']);\n        return;\n      }\n      this.problem = this.problems[0];\n      this.num_problems = Math.min(this.num_problems, this.problems.length);\n      this.solution_code = this.problem.code;\n    });\n  }\n\n  /**\n   * Shuffles array in place. ES6 version\n   * @param {Array} arr items An array containing the items.\n   */\n  private shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  onSubmitSolution(submitted_code: string){\n    this.problemService.testTestSolution(this.problem.name, submitted_code).subscribe((res) => {\n      this.isSuccess = res.success;\n      this.feedback_msg = res.msg;\n      if(this.isSuccess)\n        this.progress++;\n      else if(this.feedback_msg === 'Incorrect Solution!')\n        this.failed = true;\n    });\n  }\n\n  nextProblem(){\n    this.isSuccess = undefined;\n    this.feedback_msg = undefined;\n    this.cur_prob += 1;\n    this.problem = this.problems[this.cur_prob];\n    this.solution_code = this.problem.code;\n  }\n}\n","module.exports = \".page-header{\\r\\n  text-align: center;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.subheader{\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.custom-checkbox{\\r\\n  float: left;\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\\r\\n.num-questions-form{\\r\\n  width: 200px;\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5zdWJoZWFkZXJ7XHJcbiAgbWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLmN1c3RvbS1jaGVja2JveHtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLm51bS1xdWVzdGlvbnMtZm9ybXtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\n<div class=\\\"jumbotron\\\" style=\\\"border-color: black; border-style: dotted; border-radius: 5px\\\">\\n  <h2 class=\\\"page-header\\\">Setup Test</h2>\\n  <hr class=\\\"my-4\\\">\\n  <h4 class=\\\"subheader\\\">Select the categories of the test:</h4>\\n  <div class=\\\"filters\\\">\\n    <fieldset>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category1\\\" [(ngModel)]=\\\"filterDCL\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category1\\\">Declarations and Initialization</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category2\\\" [(ngModel)]=\\\"filterEXP\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category2\\\">Expressions</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category3\\\" [(ngModel)]=\\\"filterINT\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category3\\\">Integers</label>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n  <h4 class=\\\"subheader\\\">Select number of problems:</h4>\\n  <div class=\\\"form-group num-questions-form\\\">\\n    <select [(ngModel)]=\\\"numProblems\\\" class=\\\"custom-select\\\">\\n      <option value=\\\"5\\\">5</option>\\n      <option value=\\\"10\\\">10</option>\\n      <option value=\\\"15\\\">15</option>\\n    </select>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n  <div class=\\\"text-center\\\">\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"startTest()\\\">Start Test!</a>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from \"../../services/test.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  filterDCL: boolean;\n  filterINT: boolean;\n  filterEXP: boolean;\n  numProblems: number;\n\n  constructor(private testService: TestService,\n              private router: Router) { }\n\n  startTest(){\n    let filters = [];\n    if (this.filterDCL){\n      filters.push('DCL');\n    }\n    if (this.filterINT){\n      filters.push('INT');\n    }\n    if (this.filterEXP){\n      filters.push('EXP');\n    }\n    this.testService.beginTest(this.numProblems, filters);\n    this.router.navigate(['/test/problem']);\n  }\n\n  ngOnInit() {\n    this.filterDCL = false;\n    this.filterINT = false;\n    this.filterEXP = false;\n    this.numProblems = 10;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAdmin()){\r\n      return true;\r\n    } else{\r\n      if(this.authService.isLoggedIn()){\r\n        this.router.navigate(['/problems']);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isLoggedIn()){\r\n      return true;\r\n    } else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { TestService } from \"../services/test.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private testService: TestService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.testService.isTakingTest()){\r\n      return true;\r\n    } else{\r\n      if(this.authService.isLoggedIn()){\r\n        this.router.navigate(['/test']);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of, Observable } from \"rxjs\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from \"../user\";\n\nconst helper = new JwtHelperService();\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nexport interface CountResp {\n  num_users: number\n}\n\nexport interface RegisterResp {\n  success: boolean;\n  msg: string;\n}\n\nexport interface AuthResp {\n  success: boolean;\n  msg: string;\n  token: string;\n  user: {\n    id: string,\n    name: string,\n    username: string,\n    email: string\n  };\n}\n\nexport interface ProfileResp {\n  user: {\n    name: string,\n    username: string,\n    email: string,\n    attempted_problems: Object,\n    num_solved: number,\n    num_attempted: number,\n    total_points: number,\n    join_date: string\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user): Observable<RegisterResp>{\n    return this.http.post<RegisterResp>('http://localhost:3000/users/register', user, httpOptions);\n  }\n\n  authenticateUser(user): Observable<AuthResp>{\n    return this.http.post<AuthResp>('http://localhost:3000/users/authenticate', user, httpOptions);\n  }\n\n  getProfile(): Observable<ProfileResp>{\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProfileResp>('http://localhost:3000/users/profile', httpOptions);\n  }\n\n  getUserInfo(username: string): Observable<ProfileResp>{\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProfileResp>(`http://localhost:3000/users/getUser/${username}`, httpOptions);\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    const token = localStorage.getItem('id_token');\n    return token !== null && !helper.isTokenExpired(token);\n  }\n\n  getToken(){\n    return localStorage.getItem('id_token');\n  }\n\n  getTokenUser(){\n    this.loadToken();\n    if (this.authToken != null) {\n      const user = helper.decodeToken(this.authToken);\n      return user.username;\n    } else {\n      return \"\";\n    }\n  }\n\n  isAdmin(){\n    this.loadToken();\n    if (this.authToken != null) {\n      const user = helper.decodeToken(this.authToken);\n      return user.isAdmin;\n    } else {\n      return false;\n    }\n  }\n\n  loadToken(){\n    this.authToken = localStorage.getItem('id_token');\n  }\n\n  logout(){\n    this.authToken = null;\n    localStorage.clear();\n  }\n\n  getNumUsers(){\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<CountResp>('http://localhost:3000/users/getNumUsers', httpOptions);\n  }\n\n  getAllUsers(){\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<User[]>('http://localhost:3000/users/getAllUsers', httpOptions);\n  }\n\n  searchUsers(term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty user array.\n      return of([]);\n    }\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<User[]>(`http://localhost:3000/users/search/${term}`, httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from \"../problem\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\n\nexport interface ProblemsResp {\n  problems: Problem[];\n}\n\nexport interface ProblemResp {\n  problem: Problem;\n}\n\nexport interface CheckSolutionResp {\n  success: boolean;\n  msg: string;\n}\n\nconst problemsUrl = 'http://localhost:3000/problems';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemService {\n\n  constructor(private http: HttpClient,\n              private authService: AuthService) { }\n\n  getAllProblems(): Observable<ProblemsResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProblemsResp>(`${problemsUrl}/getAllProblems`, httpOptions);\n  }\n\n  getLanguageProblems(language: string): Observable<ProblemsResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProblemsResp>(`${problemsUrl}/getLanguageProblems/${language}`, httpOptions);\n  }\n\n  getProblem(name: string): Observable<ProblemResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProblemResp>(`${problemsUrl}/getProblem/${name}`, httpOptions);\n  }\n\n  testProblemSolution(name: string, solution: string): Observable<CheckSolutionResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    let problemRequest = {\n      name: name,\n      solution: solution\n    };\n    return this.http.post<CheckSolutionResp>(`${problemsUrl}/checkProblemSolution`, problemRequest, httpOptions);\n  }\n\n  testTestSolution(name: string, solution: string): Observable<CheckSolutionResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    let problemRequest = {\n      name: name,\n      solution: solution\n    };\n    return this.http.post<CheckSolutionResp>(`${problemsUrl}/checkTestSolution`, problemRequest, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from \"../problem\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n  takingTest: boolean;\n  num_problems: number;\n  filters: Array<string>;\n\n  constructor() { }\n\n  beginTest(num_problems: number, filters: Array<string>){\n    this.takingTest = true;\n    this.num_problems = num_problems;\n    this.filters = filters;\n  }\n\n  getNumProblems(): number{\n    return this.num_problems;\n  }\n\n  getFilters(): Array<string>{\n    return this.filters;\n  }\n\n  isTakingTest(){\n    return (this.takingTest === true);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    return !(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined\n      || user.name == '' || user.username == '' || user.email == '' || user.password == '');\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}