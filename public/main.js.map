{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/code-problem/code-problem.component.css","webpack:///./src/app/components/code-problem/code-problem.component.html","webpack:///./src/app/components/code-problem/code-problem.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/problem.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,yJ;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,aAAa,CAAC;IACxB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AAER;AACwB;AACH;AACS;AACZ;AACe;AACN;AAC7B;AACiB;AACN;AACR;AACwC;AAChC;AAEnB;AACQ;AAE7C,IAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAC;IACpC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4FAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAC1E,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAgB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAC;IACxE,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qGAAoB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAC;CACpF,CAAC;AAwBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAe;gBACf,gFAAc;gBACd,yFAAiB;gBACjB,6EAAa;gBACb,4FAAkB;gBAClB,uFAAgB;gBAChB,qGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,2DAAW;gBACX,4EAAmB,CAAC,OAAO,EAAE;gBAC7B,sEAAgB;gBAChB,sEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpDtB,+DAA+D,2K;;;;;;;;;;;ACA/D,+BAA+B,cAAc,wCAAwC,KAAK,mBAAmB,kFAAkF,+PAA+P,KAAK,eAAe,wLAAwL,cAAc,W;;;;;;;;;;;;;;;;;;;ACAtmB;AACD;AAEe;AAQhE;IAME,8BAAoB,KAAqB,EACrB,cAA8B;QAD9B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,yCAAU,GAAV;QAAA,iBAMC;QALC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,iBAAO;YACpD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAC/B,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAgB,GAAhB,UAAiB,cAAsB;QAAvC,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YACvF,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;YAC7B,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,uCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IA3BU,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,mIAA4C;;SAE7C,CAAC;+EAQ2B,8DAAc;YACL,wEAAc;OAPvC,oBAAoB,CA6BhC;IAAD,2BAAC;CAAA;AA7BgC;;;;;;;;;;;;ACXjC,+DAA+D,mK;;;;;;;;;;;ACA/D,6ZAA6Z,cAAc,iBAAiB,oBAAoB,iBAAiB,uCAAuC,yEAAyE,0BAA0B,8CAA8C,2D;;;;;;;;;;;;;;;;;;;;ACAvmB;AAEc;AACvB;AACiB;AAO1D;IAIE,4BAAoB,cAA8B,EAC9B,WAAwB,EACxB,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,2CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,yBAAe;YAC5D,KAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,QAAQ,CAAC;YACzC,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO;gBAC7C,KAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;gBAC7B,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC1C,KAAoB,UAAa,EAAb,UAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EAAC;oBAA7B,IAAI,OAAO;oBACd,IAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;wBACnC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC;qBACzF;yBAAM;wBACL,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;qBACrE;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAc,GAAd,UAAe,YAAoB;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,YAAc,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IA/BU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;;SAE1C,CAAC;+EAKoC,wEAAc;YACjB,kEAAW;YAChB,sDAAM;OANvB,kBAAkB,CAgC9B;IAAD,yBAAC;CAAA;AAhC8B;;;;;;;;;;;;ACX/B,+DAA+D,uJ;;;;;;;;;;;ACA/D,inB;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,+DAA+D,uJ;;;;;;;;;;;ACA/D,qOAAqO,gBAAgB,2KAA2K,gBAAgB,qH;;;;;;;;;;;;;;;;;;;;;ACA9X;AACQ;AACjB;AACsB;AAO/D;IAIE,wBAAoB,WAAwB,EACxB,MAAc,EACd,YAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAsB;IAAI,CAAC;IAE3D,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBAiBC;QAhBC,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACrD,IAAG,IAAI,CAAC,OAAO,EAAC;gBACd,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC3F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAK;gBACJ,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC3E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA5BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,8GAAqC;;SAEtC,CAAC;+EAKiC,kEAAW;YAChB,sDAAM;YACA,4EAAoB;OAN3C,cAAc,CA6B1B;IAAD,qBAAC;CAAA;AA7B0B;;;;;;;;;;;;ACV3B,+DAA+D,2J;;;;;;;;;;;ACA/D,inBAAinB,YAAY,0PAA0P,YAAY,uNAAuN,YAAY,4NAA4N,YAAY,4NAA4N,YAAY,2jB;;;;;;;;;;;;;;;;;;;;;ACApgD;AACQ;AACjB;AACsB;AAO/D;IAEE,yBAAoB,WAAwB,EACxB,MAAc,EACd,YAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAsB;IAAI,CAAC;IAE3D,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACzF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;IAdU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAGiC,kEAAW;YAChB,sDAAM;YACA,4EAAoB;OAJ3C,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;ACV5B,+DAA+D,+J;;;;;;;;;;;ACA/D,6EAA6E,WAAW,kFAAkF,eAAe,kDAAkD,YAAY,sDAAsD,gBAAgB,sEAAsE,iBAAiB,wEAAwE,oBAAoB,yB;;;;;;;;;;;;;;;;;;;ACA9b;AACQ;AACjB;AAOzC;IAGE,0BAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,mCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO;YAC7C,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,EACC,UAAC,GAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAdU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oHAAuC;;SAExC,CAAC;+EAIiC,kEAAW;YAChB,sDAAM;OAJvB,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;ACT7B,+DAA+D,+J;;;;;;;;;;;ACA/D,mOAAmO,gBAAgB,uKAAuK,gBAAgB,iKAAiK,gBAAgB,2KAA2K,gBAAgB,sH;;;;;;;;;;;;;;;;;;;;;;ACApuB;AACgB;AACH;AACL;AACjB;AAOzC;IAME,2BAAoB,eAAgC,EAChC,YAAkC,EAClC,WAAwB,EACxB,MAAc;QAHd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBA6BC;QA5BC,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,kBAAkB;QAClB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YACjG,OAAO,KAAK,CAAC;SACd;QACD,iBAAiB;aACZ,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACtD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YAChG,OAAO,KAAK,CAAC;SACd;QAED,gBAAgB;QAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC/C,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uCAAuC,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC9G,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC9E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IA3CU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,uHAAwC;;SAEzC,CAAC;+EAOqC,0EAAe;YAClB,4EAAoB;YACrB,kEAAW;YAChB,sDAAM;OATvB,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA;AA5C6B;;;;;;;;;;;;;;;;;;;;ACXa;AACW;AACC;AAKvD;IACE,mBAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX;QACE,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAC;YAC/B,OAAO,IAAI,CAAC;SACb;aAAK;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAXU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAEiC,kEAAW;YAChB,sDAAM;OAFvB,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;;;;;;;;;;ACPqB;AACoB;AAET;AAEtD,IAAM,MAAM,GAAG,IAAI,mEAAgB,EAAE,CAAC;AAEtC,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAmCF;IAIE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAY,GAAZ,UAAa,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,sCAAsC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACjG,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAI;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,0CAA0C,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACjG,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAC,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAChG,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,qCAAqC,EAAE,WAAW,CAAC,CAAC;IACxF,CAAC;IAED,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACvB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,gCAAU,GAAV;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,OAAO,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,8BAAQ,GAAR;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,+BAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IA9CU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU;OAJzB,WAAW,CAiDvB;IAAD,kBAAC;CAAA;AAjDuB;;;;;;;;;;;;;;;;;;;;AC5CmB;AAEoB;AAElB;AAe7C,IAAM,WAAW,GAAG,gCAAgC,CAAC;AAKrD;IAEE,wBAAoB,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,uCAAc,GAAd;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9C,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAC5F,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,WAAW,oBAAiB,EAAE,WAAW,CAAC,CAAC;IACtF,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9C,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAC5F,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,WAAW,oBAAe,IAAM,EAAE,WAAW,CAAC,CAAC;IACtF,CAAC;IAED,4CAAmB,GAAnB,UAAoB,IAAY,EAAE,QAAgB;QAChD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9C,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,eAAe,EAAE,SAAS,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAC5F,CAAC;QACF,IAAI,cAAc,GAAG;YACnB,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAuB,WAAW,0BAAuB,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;IAC/G,CAAC;IA/BU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;YACH,yDAAW;OAHjC,cAAc,CAgC1B;IAAD,qBAAC;CAAA;AAhC0B;;;;;;;;;;;;;;;;;;ACxBgB;AAK3C;IAEE;IAAgB,CAAC;IAEjB,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS;eACjH,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,EAAE,GAAG,yJAAyJ,CAAC;QACrK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAZU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;;ACL5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { CodeProblemComponent } from './components/code-problem/code-problem.component';\nimport { CodemirrorModule } from \"@ctrl/ngx-codemirror\";\n\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/addon/edit/closebrackets';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'problems', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'problems/:name', component: CodeProblemComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    CodeProblemComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    CodemirrorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29kZS1wcm9ibGVtL2NvZGUtcHJvYmxlbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br/>\\n<h1>{{problem.name}}</h1>\\n<p style=\\\"white-space: pre-wrap;\\\">{{problem.paragraph}}</p>\\n<ngx-codemirror [(ngModel)]=\\\"solution_code\\\"\\n                [options]=\\\"{\\n                  lineNumbers: true,\\n                  theme: 'material',\\n                  mode: 'text/x-c++src',\\n                  indentUnit: 4,\\n                  indentWithTabs: true,\\n                  autoCloseBrackets: true\\n                }\\\">{{solution_code}}</ngx-codemirror>\\n<br/>\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitSolution(solution_code)\\\">Submit</button>\\n<br/>\\n<div *ngIf=\\\"isSuccess != undefined\\\">{{feedback_msg}}</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\n\n@Component({\n  selector: 'app-code-problem',\n  templateUrl: './code-problem.component.html',\n  styleUrls: ['./code-problem.component.css']\n})\n\nexport class CodeProblemComponent implements OnInit {\n  problem: Problem;\n  solution_code: string;\n  isSuccess: any;\n  feedback_msg: any;\n\n  constructor(private route: ActivatedRoute,\n              private problemService: ProblemService) { }\n\n  getProblem(){\n    const name = this.route.snapshot.paramMap.get('name');\n    this.problemService.getProblem(name).subscribe(problem => {\n      this.problem = problem.problem;\n      this.solution_code = problem.problem.code;\n    });\n  }\n\n  onSubmitSolution(submitted_code: string){\n    this.problemService.testProblemSolution(this.problem.name, submitted_code).subscribe((res) => {\n      this.isSuccess = res.success;\n      this.feedback_msg = res.msg;\n    });\n  }\n\n\n  ngOnInit() {\n    this.getProblem();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Problems</h2>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\"></th>\\n    <th scope=\\\"col\\\">Difficulty</th>\\n    <th scope=\\\"col\\\">Date of Solution</th>\\n    <th scope=\\\"col\\\">Solved</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let problem of problems\\\" (dblclick)=\\\"onClickProblem(problem.name)\\\">\\n    <th scope=\\\"row\\\">{{problem.name}}</th>\\n    <td>{{problem.difficulty}}</td>\\n    <td>{{problemInfo.get(problem.name).dateSol}}</td>\\n    <td>\\n      <div *ngIf=\\\"problemInfo.get(problem.name).solved; else elseBlock\\\">&#10004;</div>\\n      <ng-template #elseBlock>&#10060;</ng-template>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  problems: Problem[];\n  problemInfo: Map<string, {solved: boolean, dateSol: string}>;\n\n  constructor(private problemService: ProblemService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  getAllProblems(){\n    this.problemService.getAllProblems().subscribe(problemsWrapper => {\n      this.problems = problemsWrapper.problems;\n      this.authService.getProfile().subscribe(profile => {\n        this.problemInfo = new Map();\n        const info = profile.user.solved_problems;\n        for (let problem of this.problems){\n          if(info.hasOwnProperty(problem.name)){\n            this.problemInfo.set(problem.name, {solved: true, dateSol: info[problem.name].dateSol});\n          } else {\n            this.problemInfo.set(problem.name, {solved: false, dateSol: 'TBD'});\n          }\n        }\n      });\n    });\n  }\n\n  onClickProblem(problem_name: string){\n    this.router.navigate([`/problems/${problem_name}`]);\n  }\n\n  ngOnInit() {\n    this.getAllProblems();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Cyber-Trainer</h1>\\n  <p class=\\\"lead\\\">Welcome to our project</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express Backend</h3>\\n    <p>A rock solid blah</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI</h3>\\n    <p>A paper solid blah</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>A scissors solid blah</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timout: 5000});\n        this.router.navigate(['/problems']);\n      } else{\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timout: 5000});\n        this.router.navigate(['/login']);\n        this.password = '';\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Rafael-Project</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto navbar-left\\\">\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      </li>\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/problems']\\\">Problems</a>\\n      </li>\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<br/>\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Join Date: {{user.join_date}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solved Problems: {{user.num_solved}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solution Attempts: {{user.num_attempted}}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n      (err) => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(private validateService: ValidateService,\n              private flashMessage: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\"Please fill in all fields\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n    // Validate Email\n    else if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please use a valid email\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe((data) => {\n        if (data.success) {\n          this.flashMessage.show(\"You are now registered and can log in\", { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/login']);\n        } else {\n          this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n          this.router.navigate(['/register']);\n        }\n      }\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isLoggedIn()){\r\n      return true;\r\n    } else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst helper = new JwtHelperService();\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nexport interface RegisterResp {\n  success: boolean;\n  msg: string;\n}\n\nexport interface AuthResp {\n  success: boolean;\n  msg: string;\n  token: string;\n  user: {\n    id: string,\n    name: string,\n    username: string,\n    email: string,\n  };\n}\n\nexport interface ProfileResp {\n  user: {\n    id: string,\n    name: string,\n    username: string,\n    email: string,\n    solved_problems: Object,\n    num_solved: number,\n    num_attempted: number,\n    join_date: string\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user): Observable<RegisterResp>{\n    return this.http.post<RegisterResp>('http://localhost:3000/users/register', user, httpOptions);\n  }\n\n  authenticateUser(user): Observable<AuthResp>{\n    return this.http.post<AuthResp>('http://localhost:3000/users/authenticate', user, httpOptions);\n  }\n\n  getProfile(): Observable<ProfileResp>{\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProfileResp>('http://localhost:3000/users/profile', httpOptions);\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  isLoggedIn() {\n    const token = localStorage.getItem('id_token');\n    return token !== null && !helper.isTokenExpired(token);\n  }\n\n  getToken(){\n    return localStorage.getItem('id_token');\n  }\n\n  loadToken(){\n    this.authToken = localStorage.getItem('id_token');\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from \"../problem\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\n\nexport interface AllProblemsResp {\n  problems: Problem[];\n}\n\nexport interface ProblemResp {\n  problem: Problem;\n}\n\nexport interface CheckSolutionResp {\n  success: boolean;\n  msg: string;\n}\n\nconst problemsUrl = 'http://localhost:3000/problems';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemService {\n\n  constructor(private http: HttpClient,\n              private authService: AuthService) { }\n\n  getAllProblems(): Observable<AllProblemsResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<AllProblemsResp>(`${problemsUrl}/getAllProblems`, httpOptions);\n  }\n\n  getProblem(name: string): Observable<ProblemResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProblemResp>(`${problemsUrl}/getProblem/${name}`, httpOptions);\n  }\n\n  testProblemSolution(name: string, solution: string): Observable<CheckSolutionResp>{\n    const authToken = this.authService.getToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\n    };\n    let problemRequest = {\n      name: name,\n      solution: solution\n    };\n    return this.http.post<CheckSolutionResp>(`${problemsUrl}/checkProblemSolution`, problemRequest, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    return !(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined\n      || user.name == '' || user.username == '' || user.email == '' || user.password == '');\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}