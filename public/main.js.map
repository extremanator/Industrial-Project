{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/code-problem/code-problem.component.css","webpack:///./src/app/components/code-problem/code-problem.component.html","webpack:///./src/app/components/code-problem/code-problem.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/language/language.component.css","webpack:///./src/app/components/language/language.component.html","webpack:///./src/app/components/language/language.component.ts","webpack:///./src/app/components/leaderboard/leaderboard.component.css","webpack:///./src/app/components/leaderboard/leaderboard.component.html","webpack:///./src/app/components/leaderboard/leaderboard.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/public-profile/public-profile.component.css","webpack:///./src/app/components/public-profile/public-profile.component.html","webpack:///./src/app/components/public-profile/public-profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/statistics/statistics.component.css","webpack:///./src/app/components/statistics/statistics.component.html","webpack:///./src/app/components/statistics/statistics.component.ts","webpack:///./src/app/components/test-problem/test-problem.component.css","webpack:///./src/app/components/test-problem/test-problem.component.html","webpack:///./src/app/components/test-problem/test-problem.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/test.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/problem.service.ts","webpack:///./src/app/services/test.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { CodeProblemComponent } from './components/code-problem/code-problem.component';\r\nimport { CodemirrorModule } from \"@ctrl/ngx-codemirror\";\r\nimport { StatisticsComponent } from './components/statistics/statistics.component';\r\nimport { AdminGuard } from \"./guards/admin.guard\";\r\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\r\nimport { LanguageComponent } from './components/language/language.component';\r\nimport { LeaderboardComponent } from './components/leaderboard/leaderboard.component';\r\nimport { TestComponent } from './components/test/test.component';\r\nimport { TestProblemComponent } from './components/test-problem/test-problem.component';\r\nimport { TestGuard } from \"./guards/test.guard\";\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport {NgxUiLoaderModule} from \"ngx-ui-loader\";\r\n\r\nimport 'codemirror/mode/clike/clike';\r\nimport 'codemirror/addon/edit/closebrackets';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'problems', component: DashboardComponent, canActivate:[AuthGuard]},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n  {path: 'leaderboard', component: LeaderboardComponent, canActivate: [AuthGuard]},\r\n  {path: 'test', component: TestComponent, canActivate: [AuthGuard]},\r\n  {path: 'test/problem', component: TestProblemComponent, canActivate: [AuthGuard, TestGuard]},\r\n  {path: 'stats', component: StatisticsComponent, canActivate: [AuthGuard, AdminGuard]},\r\n  {path: 'problems/:name', component: CodeProblemComponent, canActivate: [AuthGuard]},\r\n  {path: 'user/:username', component: PublicProfileComponent, canActivate: [AuthGuard]},\r\n  {path: 'language/:language/:filters', component: LanguageComponent, canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    CodeProblemComponent,\r\n    StatisticsComponent,\r\n    PublicProfileComponent,\r\n    LeaderboardComponent,\r\n    LanguageComponent,\r\n    TestComponent,\r\n    TestProblemComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot(),\r\n    HttpClientModule,\r\n    CodemirrorModule,\r\n    NgxUiLoaderModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"tr {\\r\\n  background: #ededed;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 10px 30px;\\r\\n  border-radius: 3px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ntr:active {\\r\\n  background: #e5e5e5;\\r\\n  box-shadow: inset 0px 0px 5px #c1c1c1;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb2RlLXByb2JsZW0vY29kZS1wcm9ibGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUduQixxQ0FBcUM7RUFDckMsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb2RlLXByb2JsZW0vY29kZS1wcm9ibGVtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ciB7XHJcbiAgYmFja2dyb3VuZDogI2VkZWRlZDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIHBhZGRpbmc6IDEwcHggMzBweDtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG50cjphY3RpdmUge1xyXG4gIGJhY2tncm91bmQ6ICNlNWU1ZTU7XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDVweCAjYzFjMWMxO1xyXG4gIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMHB4IDBweCA1cHggI2MxYzFjMTtcclxuICBib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDVweCAjYzFjMWMxO1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\r\\n\\r\\n<h1>{{(problem === undefined)?'':problem.name}}</h1>\\r\\n<div *ngIf=\\\"problem?.type==='open'\\\">\\r\\n  <p style=\\\"white-space: pre-wrap;\\\">{{(problem === undefined)?'':problem.paragraph}}</p>\\r\\n  <ngx-codemirror [(ngModel)]=\\\"solution_code\\\"\\r\\n                  [options]=\\\"{\\r\\n                  lineNumbers: true,\\r\\n                  theme: 'material',\\r\\n                  mode: 'text/x-c++src',\\r\\n                  indentUnit: 4,\\r\\n                  indentWithTabs: true,\\r\\n                  autoCloseBrackets: true\\r\\n                }\\\">{{solution_code}}</ngx-codemirror>\\r\\n  <br/>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitSolution(solution_code)\\\">Submit</button>\\r\\n  <br/>\\r\\n  <br/>\\r\\n  <div style=\\\"position: relative; background-color: white; height: 50px; width: 100%\\\">\\r\\n    <ngx-ui-loader [loaderId]=\\\"'resultLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\r\\n    <div *ngIf=\\\"isSuccess == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\r\\n      <strong>{{feedback_msg}}</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isSuccess == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\r\\n      <strong>{{feedback_msg}}</strong>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br/>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"problem?.type==='close'\\\">\\r\\n  <p style=\\\"white-space: pre-wrap;\\\">{{problem.paragraph}}</p>\\r\\n  <ngx-codemirror *ngIf=\\\"solution_code\\\" [(ngModel)]=\\\"solution_code\\\"\\r\\n                  [options]=\\\"{\\r\\n                    lineNumbers: true,\\r\\n                    theme: 'material',\\r\\n                    mode: 'text/x-c++src',\\r\\n                    indentUnit: 4,\\r\\n                    indentWithTabs: true,\\r\\n                    readOnly: true\\r\\n                  }\\\">{{solution_code}}</ngx-codemirror>\\r\\n  <br *ngIf=\\\"solution_code\\\"/>\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let sol of problem.solutions\\\" (click)=\\\"onSolveClosed(sol)\\\" class=\\\"change-cursor\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">{{ sol }}</button>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div style=\\\"position: relative; background-color: white; height: 50px; width: 100%\\\">\\r\\n    <ngx-ui-loader [loaderId]=\\\"'resultLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\r\\n    <div *ngIf=\\\"isSuccess == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\r\\n      <strong>{{feedback_msg}}</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isSuccess == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\r\\n      <strong>{{feedback_msg}}</strong>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br/>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Problem } from \"../../problem\";\r\nimport { ProblemService } from \"../../services/problem.service\";\r\nimport {NgxUiLoaderService} from \"ngx-ui-loader\";\r\n\r\n@Component({\r\n  selector: 'app-code-problem',\r\n  templateUrl: './code-problem.component.html',\r\n  styleUrls: ['./code-problem.component.css']\r\n})\r\nexport class CodeProblemComponent implements OnInit {\r\n  problem: Problem;\r\n  solution_code: string;\r\n  isSuccess: any;\r\n  feedback_msg: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private problemService: ProblemService,\r\n              private spinnerService: NgxUiLoaderService) { }\r\n\r\n  getProblem() {\r\n    const name = this.route.snapshot.paramMap.get('name');\r\n    this.problemService.getProblem(name).subscribe(problemWrapper => {\r\n      this.problem = problemWrapper.problem;\r\n      if (this.problem.code !== undefined) {\r\n        this.solution_code = this.problem.code;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmitSolution(submitted_code: string) {\r\n    this.spinnerService.startLoader('resultLoader');\r\n    window.scroll({\r\n      top: 1000,\r\n      behavior: 'smooth'\r\n    });\r\n    this.problemService.checkOpenSolutionAndUpdateCounters(this.problem.name, submitted_code).subscribe((res) => {\r\n      this.isSuccess = res.success;\r\n      this.feedback_msg = res.msg;\r\n      this.spinnerService.stopLoader('resultLoader');\r\n    });\r\n  }\r\n\r\n\r\n  onSolveClosed(solution: string) {\r\n    this.spinnerService.startLoader('resultLoader');\r\n    window.scroll({\r\n      top: 1000,\r\n      behavior: 'smooth'\r\n    });\r\n    this.problemService.checkCloseProblemSolution(this.problem.name, solution).subscribe((res) => {\r\n      this.isSuccess = res.success;\r\n      this.feedback_msg = res.msg;\r\n      this.spinnerService.stopLoader('resultLoader');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProblem();\r\n  }\r\n\r\n}\r\n","module.exports = \".page-header{\\r\\n  text-align: center;\\r\\n}\\r\\n.language-name{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4ubGFuZ3VhZ2UtbmFtZXtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\r\\n<h2 class=\\\"page-header\\\">Programming Languages</h2>\\r\\n<div class=\\\"jumbotron cpp change-cursor\\\" routerLink=\\\"/language/cpp/::\\\">\\r\\n  <h2 class=\\\"language-name\\\">C++</h2>\\r\\n</div>\\r\\n<div class=\\\"jumbotron java change-cursor\\\" routerLink=\\\"/language/java/::\\\">\\r\\n  <h2 class=\\\"language-name\\\">Java</h2>\\r\\n</div>\\r\\n<div class=\\\"jumbotron c# change-cursor\\\" routerLink=\\\"/language/c#/::\\\">\\r\\n  <h2 class=\\\"language-name\\\">C#</h2>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".card-footer{\\r\\n  background-color: darkslategrey;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBK0I7QUFDakMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWZvb3RlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrc2xhdGVncmV5O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<footer class=\\\"card-footer\\\">\\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.<br/>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<br/>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.<br/>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>Cyber-Trainer</h1>\\r\\n  <p class=\\\"lead\\\">Welcome to our project</p>\\r\\n  <div>\\r\\n    <a *ngIf=\\\"user === undefined\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a *ngIf=\\\"user === undefined\\\" class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n    <p *ngIf=\\\"user !== undefined\\\">Welcome, {{ user.name }}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>Express Backend</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>Angular-CLI</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>JWT Tokens</h3>\\r\\n  </div>\\r\\n</div>\\r\\n<br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  user: any;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n        this.user = profile.user;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".problems{\\r\\n  display: table-cell;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.filters{\\r\\n  display: table-cell;\\r\\n  padding-left: 20px;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYW5ndWFnZS9sYW5ndWFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7QUFDWjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYW5ndWFnZS9sYW5ndWFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2JsZW1ze1xyXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLmZpbHRlcnN7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">{{language}}</h2>\\n<div class=\\\"problems\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n      <th scope=\\\"col\\\"></th>\\n      <th scope=\\\"col\\\">Difficulty</th>\\n      <th scope=\\\"col\\\">Points</th>\\n      <th scope=\\\"col\\\">Date of Solution</th>\\n      <th scope=\\\"col\\\">Solved</th>\\n    </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"problemInfo\\\">\\n      <tr *ngFor=\\\"let problem of problems\\\" (click)=\\\"onClickProblem(problem.name)\\\" class=\\\"change-cursor\\\">\\n        <th scope=\\\"row\\\">{{problem.name}}</th>\\n        <td>{{problem.difficulty}}</td>\\n        <td>{{problem.points}}</td>\\n        <td>{{(problemInfo.get(problem.name) === undefined)?'':(problemInfo.get(problem.name).dateSol)}}</td>\\n        <td>\\n          <div *ngIf=\\\"(problemInfo.get(problem.name)===undefined)?false:(problemInfo.get(problem.name).solved == true); else elseBlock\\\">&#10004;</div>\\n          <ng-template #elseBlock>&#10060;</ng-template>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<div class=\\\"filters\\\">\\n  <fieldset>\\n    <legend>Difficulty</legend>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficulty1\\\" [(ngModel)]=\\\"filterEasy\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficulty1\\\">Easy</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficutly2\\\" [(ngModel)]=\\\"filterMedium\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficutly2\\\">Medium</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"difficulty3\\\" [(ngModel)]=\\\"filterHard\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"difficulty3\\\">Hard</label>\\n      </div>\\n    </div>\\n    <legend>Category</legend>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category1\\\" [(ngModel)]=\\\"filterDCL\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category1\\\">Declarations and Initialization</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category2\\\" [(ngModel)]=\\\"filterEXP\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category2\\\">Expressions</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category3\\\" [(ngModel)]=\\\"filterINT\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category3\\\">Integers</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category4\\\" [(ngModel)]=\\\"filterCTR\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category4\\\">Containers</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category5\\\" [(ngModel)]=\\\"filterSTR\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category5\\\">Characters and Strings</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category6\\\" [(ngModel)]=\\\"filterMEM\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category6\\\">Memory Management</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category7\\\" [(ngModel)]=\\\"filterFIO\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category7\\\">Input Output</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category8\\\" [(ngModel)]=\\\"filterERR\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category8\\\">Exceptions and Error Handling</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category9\\\" [(ngModel)]=\\\"filterOOP\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category9\\\">Object Oriented Programming</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category10\\\" [(ngModel)]=\\\"filterCON\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category10\\\">Concurrency</label>\\n      </div>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category11\\\" [(ngModel)]=\\\"filterMSC\\\" (change)=\\\"updateFilter()\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"category11\\\">Miscellaneous</label>\\n      </div>\\n    </div>\\n  </fieldset>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../problem\";\nimport { ProblemService } from \"../../services/problem.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\ninterface Filters {\n  difficulties: Array<string>;\n  categories: Array<string>;\n}\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\n  language: string;\n  routeLanguage: string;\n  problems: Problem[];\n  problemInfo: Map<string, {solved: boolean, dateSol: string}>;\n\n  filterEasy: boolean;\n  filterMedium: boolean;\n  filterHard: boolean;\n  filterDCL: boolean;\n  filterEXP: boolean;\n  filterINT: boolean;\n  filterCTR: boolean;\n  filterSTR: boolean;\n  filterMEM: boolean;\n  filterFIO: boolean;\n  filterERR: boolean;\n  filterOOP: boolean;\n  filterCON: boolean;\n  filterMSC: boolean;\n\n  constructor(private problemService: ProblemService,\n              private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  getLanguageProblems(language: string, filters: Filters){\n    this.problemService.getLanguageProblems(language).subscribe(problemsWrapper => {\n      const temp = problemsWrapper.problems;\n      this.problems = [];\n      for (let problem of temp){\n        let hasDifficulty = false;\n        if (filters.difficulties.length === 0)\n          hasDifficulty = true;\n        else {\n          for (let difficulty of filters.difficulties) {\n            if (problem.category.includes(difficulty)) {\n              hasDifficulty = true;\n              break;\n            }\n          }\n        }\n        let hasCategory = false;\n        if (filters.categories.length === 0)\n          hasCategory = true;\n        else {\n          for (let category of filters.categories) {\n            if (problem.category.includes(category)) {\n              hasCategory = true;\n              break;\n            }\n          }\n        }\n        if(hasCategory && hasDifficulty){\n          this.problems.push(problem);\n        }\n      }\n      this.problems.sort((obj1, obj2) => {\n        return (obj1.name > obj2.name)?1:-1;\n      });\n      this.authService.getProfile().subscribe(profile => {\n        const info = profile.user.attempted_problems;\n        let temp_info: Map<string, {solved: boolean, dateSol: string}> = new Map();\n        for (let problem of this.problems){\n          if(info.hasOwnProperty(problem.name)){\n            temp_info.set(problem.name, {solved: info[problem.name].solved , dateSol: info[problem.name].dateSol});\n          } else {\n            temp_info.set(problem.name, {solved: false, dateSol: 'TBD'});\n          }\n        }\n        this.problemInfo = temp_info;\n      });\n    });\n  }\n\n  onClickProblem(problem_name: string){\n    this.router.navigate([`/problems/${problem_name}`]);\n  }\n\n  updateFilter(){\n    let filters = \":\";\n    if (this.filterEasy){\n      filters += 'Easy:';\n    }\n    if (this.filterMedium){\n      filters += 'Medium:';\n    }\n    if (this.filterHard){\n      filters += 'Hard:';\n    }\n    filters += ':';\n    if (this.filterDCL){\n      filters += 'DCL:';\n    }\n    if (this.filterEXP){\n      filters += 'EXP:';\n    }\n    if (this.filterINT){\n      filters += 'INT:';\n    }\n    if (this.filterCTR){\n      filters += 'CTR:';\n    }\n    if (this.filterSTR){\n      filters += 'STR:';\n    }\n    if (this.filterMEM){\n      filters += 'MEM:';\n    }\n    if (this.filterFIO){\n      filters += 'FIO:';\n    }\n    if (this.filterERR){\n      filters += 'ERR:';\n    }\n    if (this.filterOOP){\n      filters += 'OOP:';\n    }\n    if (this.filterCON){\n      filters += 'CON:';\n    }\n    if (this.filterMSC){\n      filters += 'MSC:';\n    }\n    this.router.navigate([`/language/${this.routeLanguage}/${filters}`]);\n  }\n\n  getFilters(filters: string): Filters {\n    const re = /(:[a-zA-Z0-9]+)*::([a-zA-Z0-9]+:)*/;\n    if (!matchExactRegEx(re, filters)) {\n      return {difficulties: [], categories: []};\n    }\n    const difficulties = [];\n    let i;\n    while(filters[1] != ':'){\n       i = filters.indexOf(':', 1);\n       difficulties.push(filters.slice(1, i));\n       filters = filters.slice(i, filters.length);\n    }\n    filters = filters.slice(1, filters.length);\n    let categories = [];\n    while(filters != ':'){\n      i = filters.indexOf(':', 1);\n      categories.push(filters.slice(1, i));\n      filters = filters.slice(i, filters.length);\n    }\n    return {difficulties: difficulties, categories: categories};\n  }\n\n  ngOnInit() {\n    this.problemInfo = null;\n    this.route.params.subscribe(routeParams => {\n      this.routeLanguage = routeParams.language;\n      switch (routeParams.language){\n        case 'cpp':\n          this.language = 'C++';\n          break;\n        case 'java':\n          this.language = 'Java';\n          break;\n        default:\n          this.language = '';\n          break;\n      }\n      const filters = this.getFilters(routeParams.filters);\n      if(filters.difficulties.includes('Easy'))\n        this.filterEasy = true;\n      else\n        this.filterEasy = false;\n      if(filters.difficulties.includes('Medium'))\n        this.filterMedium = true;\n      else\n        this.filterMedium = false;\n      if(filters.difficulties.includes('Hard'))\n        this.filterHard = true;\n      else\n        this.filterHard = false;\n      if(filters.categories.includes('DCL'))\n        this.filterDCL = true;\n      else\n        this.filterDCL = false;\n      if(filters.categories.includes('EXP'))\n        this.filterEXP = true;\n      else\n        this.filterEXP = false;\n      if(filters.categories.includes('INT'))\n        this.filterINT = true;\n      else\n        this.filterINT = false;\n      if(filters.categories.includes('CTR'))\n        this.filterCTR = true;\n      else\n        this.filterCTR = false;\n      if(filters.categories.includes('STR'))\n        this.filterSTR = true;\n      else\n        this.filterSTR = false;\n      if(filters.categories.includes('MEM'))\n        this.filterMEM = true;\n      else\n        this.filterMEM = false;\n      if(filters.categories.includes('FIO'))\n        this.filterFIO = true;\n      else\n        this.filterFIO = false;\n      if(filters.categories.includes('ERR'))\n        this.filterERR = true;\n      else\n        this.filterERR = false;\n      if(filters.categories.includes('OOP'))\n        this.filterOOP = true;\n      else\n        this.filterOOP = false;\n      if(filters.categories.includes('CON'))\n        this.filterCON = true;\n      else\n        this.filterCON = false;\n      if(filters.categories.includes('MSC'))\n        this.filterMSC = true;\n      else\n        this.filterMSC = false;\n      this.getLanguageProblems(routeParams.language, filters);\n    });\n  }\n\n}\n\nfunction matchExactRegEx(r, str) {\n  const match = str.match(r);\n  return match && str === match[0];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGVhZGVyYm9hcmQvbGVhZGVyYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Username</th>\\n    <th scope=\\\"col\\\">Join Date</th>\\n    <th scope=\\\"col\\\">Number of Problems Solved</th>\\n    <th scope=\\\"col\\\">Total Points</th>\\n  </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"users\\\">\\n  <tr *ngFor=\\\"let user of users\\\" routerLink=\\\"/user/{{user.username}}\\\" class=\\\"change-cursor\\\">\\n    <th scope=\\\"row\\\">{{user.username}}</th>\\n    <td>{{user.join_date}}</td>\\n    <td>{{user.num_solved}}</td>\\n    <td>{{user.total_points}}</td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from \"../../user\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.css']\n})\nexport class LeaderboardComponent implements OnInit {\n  users: User[];\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  getAllUsers(){\n    this.authService.getAllUsers().subscribe(users => {\n      this.users = users;\n      this.users.sort((obj1,obj2) => {\n        let points_diff = obj2.total_points - obj1.total_points;\n        if (points_diff != 0) return points_diff;\n        else {\n          return (obj2.username > obj1.username)? 1 : -1;\n        }\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.getAllUsers();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n  <br/>\\n</form>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timout: 5000});\n        this.router.navigate(['/problems']);\n      } else{\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timout: 5000});\n        this.router.navigate(['/login']);\n        this.password = '';\n      }\n    });\n  }\n}\n","module.exports = \".search-results{\\r\\n  position: absolute;\\r\\n  width: 204px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlYXJjaC1yZXN1bHRze1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMjA0cHg7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Rafael-Project</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto navbar-left\\\">\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/problems']\\\">Problems</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/test']\\\">Tests</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/leaderboard']\\\">Leaderboard</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn() && authService.isAdmin()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/stats']\\\">Stats</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div *ngIf=\\\"authService.isLoggedIn()\\\" (mouseenter)=\\\"changeSearchHover()\\\" (mouseleave)=\\\"changeSearchHover()\\\">\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input #searchBox id=\\\"search-box\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (input)=\\\"search(searchBox.value)\\\" (focus)=\\\"changeSearchFocus()\\\" (blur)=\\\"changeSearchFocus()\\\">\\r\\n      </form>\\r\\n      <ul class=\\\"list-group search-results\\\" *ngIf=\\\"isSearchInFocus || isHoveringSearch\\\">\\r\\n        <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" *ngFor=\\\"let user of users$ | async\\\" >\\r\\n          <a routerLink=\\\"/user/{{user.username}}\\\">\\r\\n            {{user.username}}\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { Observable, Subject } from \"rxjs\";\nimport { User } from \"../../user\";\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  users$: Observable<User[]>;\n  private searchTerms = new Subject<string>();\n  isSearchInFocus: boolean;\n  isHoveringSearch: boolean;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n    this.isSearchInFocus = false;\n    this.isHoveringSearch = false;\n    this.users$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.authService.searchUsers(term))\n    );\n  }\n\n  changeSearchHover() {\n    this.isHoveringSearch = !this.isHoveringSearch;\n  }\n\n  changeSearchFocus() {\n    this.isSearchInFocus = !this.isSearchInFocus;\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  search(term: string){\n    this.searchTerms.next(term);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<br/>\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Join Date: {{user.join_date}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solved Problems: {{user.num_solved}}</li>\\n    <li class=\\\"list-group-item\\\">Number of Solution Attempts: {{user.num_attempted}}</li>\\n  </ul>\\n</div>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n      (err) => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHVibGljLXByb2ZpbGUvcHVibGljLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Join Date: {{user.join_date}}</li>\\n  </ul>\\n</div>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n  user: any;\n  attempted_problems: string;\n  solved_problems: string;\n\n  constructor(private route: ActivatedRoute,\n              private authService: AuthService) { }\n\n  getUser(username: string){\n    this.authService.getUserInfo(username).subscribe(data => {\n      this.user = data.user;\n      if (data.user.num_attempted == 0){\n        this.attempted_problems = `${username} hasn't even tried solving something. What a loser!`;\n        this.solved_problems = \"\";\n      } else {\n        this.attempted_problems += `${username} has attempted: `;\n        if (data.user.num_solved == 0) {\n          for (let name in data.user.attempted_problems) {\n            if (this.attempted_problems === `${username} has attempted: `) {\n              this.attempted_problems += name;\n            } else {\n              this.attempted_problems += `, ${name}`;\n            }\n          }\n          this.solved_problems += \"\\nBut hasn't solved anything. What a loser!\";\n        } else {\n          this.solved_problems += `\\n${username} has solved: `;\n          for (let name in data.user.attempted_problems) {\n            if (this.attempted_problems === `${username} has attempted: `) {\n              this.attempted_problems += name;\n            } else {\n              this.attempted_problems += `, ${name}`;\n            }\n            if (data.user.attempted_problems[name].solved){\n              if (this.solved_problems === `\\n${username} has solved: `) {\n                this.solved_problems += name;\n              } else {\n                this.solved_problems += `, ${name}`;\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(routeParams => {\n      this.attempted_problems = \"\";\n      this.solved_problems = \"\";\n      this.getUser(routeParams.username);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br/>\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n  <br/>\\n</form>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(private validateService: ValidateService,\n              private flashMessage: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\"Please fill in all fields\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n    // Validate Email\n    else if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please use a valid email\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe((data) => {\n        if (data.success) {\n          this.flashMessage.show(\"You are now registered and can log in\", { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/login']);\n        } else {\n          this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n          this.router.navigate(['/register']);\n        }\n      }\n    );\n  }\n}\n","module.exports = \".list {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.sub-table{\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.my-dropdown::after{\\r\\n  content: '˅';\\r\\n  font-family: \\\"Courier New\\\", serif;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.order-radio{\\r\\n  float: left;\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.radio-label{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.search-form{\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zdGF0aXN0aWNzL3N0YXRpc3RpY3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQ0FBaUM7RUFDakMsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdCB7XHJcbiAgd2lkdGg6IDI1JTtcclxufVxyXG5cclxuLmluZm8ge1xyXG4gIHdpZHRoOiA3NSU7XHJcbn1cclxuXHJcbi5zdWItdGFibGV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxufVxyXG5cclxuLm15LWRyb3Bkb3duOjphZnRlcntcclxuICBjb250ZW50OiAny4UnO1xyXG4gIGZvbnQtZmFtaWx5OiBcIkNvdXJpZXIgTmV3XCIsIHNlcmlmO1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLm9yZGVyLXJhZGlve1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4ucmFkaW8tbGFiZWx7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5zZWFyY2gtZm9ybXtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div style=\\\"display: flex;\\\">\\n  <div class=\\\"list\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <tbody class=\\\"body\\\">\\n      <tr class=\\\"change-cursor\\\" (click)=\\\"onClickGeneral()\\\" [class.table-success]=\\\"clickedGeneral\\\">\\n        <th class=\\\"my-dropdown\\\" scope=\\\"row\\\">General</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedGeneral\\\" (click)=\\\"onClickUsers('User Statistics')\\\" [class.table-active]=\\\"'User Statistics' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;User Statistics</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedGeneral\\\" (click)=\\\"onClickProblems('Problem Statistics')\\\" [class.table-active]=\\\"'Problem Statistics' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Problem Statistics</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedGeneral\\\" (click)=\\\"onClickAddProblem('Add Problem')\\\" [class.table-active]=\\\"'Add Problem' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Add Problem</th>\\n      </tr>\\n      <tr class=\\\"change-cursor\\\" (click)=\\\"onClickCategories()\\\" [class.table-success]=\\\"clickedCategories\\\">\\n        <th class=\\\"my-dropdown\\\" scope=\\\"row\\\">Categories</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Declarations and Initialization')\\\" [class.table-active]=\\\"'Declarations and Initialization' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Declarations and Initialization</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Expressions')\\\" [class.table-active]=\\\"'Expressions' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Expressions</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Integers')\\\" [class.table-active]=\\\"'Integers' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Integers</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Containers')\\\" [class.table-active]=\\\"'Containers' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Containers</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Characters and Strings')\\\" [class.table-active]=\\\"'Characters and Strings' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Characters and Strings</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Memory Management')\\\" [class.table-active]=\\\"'Memory Management' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Memory Management</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Input Output')\\\" [class.table-active]=\\\"'Input Output' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Input Output</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Exceptions and Error Handling')\\\" [class.table-active]=\\\"'Exceptions and Error Handling' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Exceptions and Error Handling</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Object Oriented Programming')\\\" [class.table-active]=\\\"'Object Oriented Programming' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Object Oriented Programming</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Concurrency')\\\" [class.table-active]=\\\"'Concurrency' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Concurrency</th>\\n      </tr>\\n      <tr class=\\\"change-cursor sub-table\\\" *ngIf=\\\"clickedCategories\\\" (click)=\\\"onClickCategory('Miscellaneous')\\\" [class.table-active]=\\\"'Miscellaneous' === selected.name\\\">\\n        <th scope=\\\"row\\\">&emsp;Miscellaneous</th>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"info\\\" *ngIf=\\\"selected.name !== undefined\\\">\\n    <br/>\\n    <h2 align=\\\"center\\\">{{selected.name}}</h2>\\n    <div *ngIf=\\\"selected.name === 'User Statistics'\\\" class=\\\"jumbotron\\\">\\n      <p class=\\\"lead\\\">The number of users in the system is: {{numUsers}}</p>\\n      <hr class=\\\"my-4\\\">\\n      <div (mouseenter)=\\\"changeUserSearchHover()\\\" (mouseleave)=\\\"changeUserSearchHover()\\\">\\n        <div class=\\\"form-group search-form\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"searchUsername\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search for username\\\" autocomplete=\\\"off\\\" (input)=\\\"onSearchUser(searchUsername)\\\"  (focus)=\\\"changeUserSearchFocus()\\\" (blur)=\\\"changeUserSearchFocus()\\\">\\n        </div>\\n        <ul class=\\\"list-group search-results\\\" *ngIf=\\\"isUserSearchInFocus || isHoveringUserSearch\\\">\\n          <li class=\\\"list-group-item d-flex justify-content-between align-items-center change-cursor\\\" *ngFor=\\\"let user of searchUsers$ | async\\\" (click)=\\\"onSelectUser(user)\\\">\\n              {{user.username}}\\n          </li>\\n        </ul>\\n      </div>\\n      <div *ngIf=\\\"selectedUser !== undefined\\\">\\n        <br/>\\n        <h2 class=\\\"page-header\\\">{{selectedUser.name}}</h2>\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\">Username: {{selectedUser.username}}</li>\\n          <li class=\\\"list-group-item\\\">Email: {{selectedUser.email}}</li>\\n          <li class=\\\"list-group-item\\\">Join Date: {{selectedUser.join_date}}</li>\\n          <li class=\\\"list-group-item\\\">Number of Solved Problems: {{selectedUser.num_solved}}</li>\\n          <li class=\\\"list-group-item\\\">Number of Solution Attempts: {{selectedUser.num_attempted}}</li>\\n          <li class=\\\"list-group-item\\\">User has solved: {{selectedUser.solved}}</li>\\n          <li class=\\\"list-group-item\\\">User has attempted: {{selectedUser.attempts}}</li>\\n        </ul>\\n        <br/>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClickRemoveUser(selectedUser)\\\">Remove User</button>\\n        <br/>\\n        <br/>\\n        <div style=\\\"position: relative;\\\" *ngIf=\\\"removeResult\\\">\\n          <ngx-ui-loader [loaderId]=\\\"'removeUserLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\n          <div *ngIf=\\\"removeResult.success == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\n            <strong>{{removeResult.msg}}</strong>\\n          </div>\\n          <div *ngIf=\\\"removeResult.success == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\n            <strong>{{removeResult.msg}}</strong>\\n          </div>\\n        </div>\\n        <hr class=\\\"my-4\\\">\\n        <p>And even more possible commands to apply to the user! <i>Maybe give test?!</i></p>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"selected.name === 'Problem Statistics'\\\" class=\\\"jumbotron\\\">\\n      <p class=\\\"lead\\\">The number of problems in the system is: {{numProblems}}</p>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\">Most solved problems: {{maxProblemsText}}</li>\\n        <li class=\\\"list-group-item\\\">Number of users that solved: {{maxSolutions}}</li>\\n        <li class=\\\"list-group-item\\\">Least solved problems: {{minProblemsText}}</li>\\n        <li class=\\\"list-group-item\\\">Number of users that solved: {{minSolutions}}</li>\\n      </ul>\\n      <hr class=\\\"my-4\\\">\\n      <div (mouseenter)=\\\"changeProblemSearchHover()\\\" (mouseleave)=\\\"changeProblemSearchHover()\\\">\\n        <div class=\\\"form-group search-form\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"searchProblem\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search for problem name\\\" autocomplete=\\\"off\\\" (input)=\\\"onSearchProblem(searchProblem)\\\" (focus)=\\\"changeProblemSearchFocus()\\\" (blur)=\\\"changeProblemSearchFocus()\\\">\\n        </div>\\n        <ul class=\\\"list-group search-results\\\" *ngIf=\\\"isProblemSearchInFocus || isHoveringProblemSearch\\\">\\n          <li class=\\\"list-group-item d-flex justify-content-between align-items-center change-cursor\\\" *ngFor=\\\"let problem of searchProblems$ | async\\\" (click)=\\\"onSelectProblem(problem)\\\">\\n            {{problem.name}}\\n          </li>\\n        </ul>\\n      </div>\\n      <div *ngIf=\\\"selectedProblem !== undefined\\\">\\n        <br/>\\n        <h2 class=\\\"page-header\\\">{{selectedProblem.name}}</h2>\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\">Name: {{selectedProblem.name}}</li>\\n          <li class=\\\"list-group-item\\\">Difficulty: {{selectedProblem.difficulty}}</li>\\n          <li class=\\\"list-group-item\\\">Categories: {{selectedProblem.category}}</li>\\n          <li class=\\\"list-group-item\\\">Point value: {{selectedProblem.points}}</li>\\n          <li class=\\\"list-group-item\\\">Type: {{selectedProblem.type_text}}</li>\\n          <li class=\\\"list-group-item\\\">Number of users that solved the problem: {{selectedProblem.num_solved}}</li>\\n          <li class=\\\"list-group-item\\\">Number of attempts to solve the problem: {{selectedProblem.num_attempted}}</li>\\n          <li class=\\\"list-group-item\\\">Percent of users that solved: {{selectedProblem.solved_percent}}%</li>\\n          <li class=\\\"list-group-item\\\">Solving users: {{selectedProblem.solvingUsers}}</li>\\n          <li class=\\\"list-group-item\\\">Avg attempts until first solution: {{selectedProblem.avg_attempts}}</li>\\n        </ul>\\n        <br/>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClickRemoveProblem(selectedProblem)\\\">Remove Problem</button>\\n        <br/>\\n        <br/>\\n        <div style=\\\"position: relative;\\\" *ngIf=\\\"removeResult\\\">\\n          <ngx-ui-loader [loaderId]=\\\"'removeProbLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\n          <div *ngIf=\\\"removeResult.success == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\n            <strong>{{removeResult.msg}}</strong>\\n          </div>\\n          <div *ngIf=\\\"removeResult.success == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\n            <strong>{{removeResult.msg}}</strong>\\n          </div>\\n        </div>\\n        <hr class=\\\"my-4\\\">\\n        <p>And even more possible commands to apply to the problem!</p>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"selected.name === 'Add Problem'\\\" class=\\\"jumbotron\\\">\\n      <h3>Configure Problem</h3>\\n      <div class=\\\"form-group\\\">\\n        <label>Name</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"addProbName\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Difficulty</label>\\n        <div class=\\\"custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" id=\\\"addProbDiff1\\\" name=\\\"addProbDiff\\\" class=\\\"custom-control-input\\\" checked=\\\"\\\" (change)=\\\"onChangeAddProbDiff('Easy')\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"addProbDiff1\\\">Easy</label>\\n        </div>\\n        <div class=\\\"custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" id=\\\"addProbDiff2\\\" name=\\\"addProbDiff\\\" class=\\\"custom-control-input\\\" (change)=\\\"onChangeAddProbDiff('Medium')\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"addProbDiff2\\\">Medium</label>\\n        </div>\\n        <div class=\\\"custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" id=\\\"addProbDiff3\\\" name=\\\"addProbDiff\\\" class=\\\"custom-control-input\\\" (change)=\\\"onChangeAddProbDiff('Hard')\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"addProbDiff3\\\">Hard</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Points</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"addProbPoints\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n      </div>\\n      <label>Categories</label>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category1\\\" [(ngModel)]=\\\"categoryDCL\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category1\\\">Declarations and Initialization</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category2\\\" [(ngModel)]=\\\"categoryEXP\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category2\\\">Expressions</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category3\\\" [(ngModel)]=\\\"categoryINT\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category3\\\">Integers</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category4\\\" [(ngModel)]=\\\"categoryCTR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category4\\\">Containers</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category5\\\" [(ngModel)]=\\\"categorySTR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category5\\\">Characters and Strings</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category6\\\" [(ngModel)]=\\\"categoryMEM\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category6\\\">Memory Management</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category7\\\" [(ngModel)]=\\\"categoryFIO\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category7\\\">Input Output</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category8\\\" [(ngModel)]=\\\"categoryERR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category8\\\">Exceptions and Error Handling</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category9\\\" [(ngModel)]=\\\"categoryOOP\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category9\\\">Object Oriented Programming</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category10\\\" [(ngModel)]=\\\"categoryCON\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category10\\\">Concurrency</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category11\\\" [(ngModel)]=\\\"categoryMSC\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category11\\\">Miscellaneous</label>\\n        </div>\\n      </div>\\n      <label>Explanation of the problem</label>\\n      <div class=\\\"form-group\\\">\\n        <textarea class=\\\"form-control\\\" id=\\\"addProbParagraph\\\" rows=\\\"5\\\" [(ngModel)]=\\\"addProbParagraph\\\"></textarea>\\n      </div>\\n      <label>Optional: Code for the problem (<i>displays under explanation</i>)</label>\\n      <ngx-codemirror [(ngModel)]=\\\"addProbCode\\\"\\n                      [options]=\\\"{\\n                  lineNumbers: true,\\n                  theme: 'material',\\n                  mode: 'text/x-c++src',\\n                  indentUnit: 4,\\n                  indentWithTabs: true,\\n                  autoCloseBrackets: true\\n                }\\\">{{addProbCode}}</ngx-codemirror>\\n      <br/>\\n      <label>Choices</label>\\n      <div class=\\\"form-group\\\" *ngFor=\\\"let i of addProbSolCount\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"addProbSols[i]\\\" [ngModelOptions]=\\\"{standalone:true}\\\" class=\\\"form-control\\\">\\n      </div>\\n      <div style=\\\"display: flex\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"onAddProbChoice()\\\">+</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left: 5px; width: 36px;\\\" *ngIf=\\\"addProbSolCount.length !== 2\\\" (click)=\\\"onRemoveProbChoice()\\\">-</button>\\n      </div>\\n      <br/>\\n      <label>Correct Choice</label>\\n      <div class=\\\"form-group\\\">\\n        <select multiple=\\\"\\\" class=\\\"form-control\\\" id=\\\"addProbCorrectChoice\\\" [(ngModel)]=\\\"addProbSol\\\">\\n          <option *ngFor=\\\"let sol of addProbSols\\\">{{sol}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitProblem()\\\">Add Problem</button>\\n      </div>\\n      <br/>\\n      <div style=\\\"position: relative;\\\" *ngIf=\\\"addProbResult\\\">\\n        <ngx-ui-loader [loaderId]=\\\"'addProbSubmitLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\n        <div *ngIf=\\\"addProbResult.success == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\n          <strong>{{addProbResult.msg}}</strong>\\n        </div>\\n        <div *ngIf=\\\"addProbResult.success == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\n          <strong>{{addProbResult.msg}}</strong>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"selected.name !== 'User Statistics' && selected.name !== 'Problem Statistics' && selected.name !== 'Add Problem'\\\" class=\\\"jumbotron\\\">\\n      <p class=\\\"lead\\\" style=\\\"white-space: pre-line\\\">\\n        The number of attempts of problems from this category is: {{selected.num_attempted}}<br>\\n        The number of times a problem from this category has been solved is: {{selected.num_solved}}<br>\\n      </p>\\n      <hr class=\\\"my-4\\\">\\n      <p class=\\\"lead\\\">List of problems from this category:</p>\\n      <p class=\\\"radio-label\\\">Order by: </p>\\n      <fieldset>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"custom-control custom-radio order-radio\\\">\\n            <input type=\\\"radio\\\" id=\\\"order1\\\" name=\\\"order\\\" class=\\\"custom-control-input\\\" checked=\\\"\\\" (change)=\\\"onChangeOrder('attempts')\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"order1\\\">Number of attempts</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio order-radio\\\">\\n            <input type=\\\"radio\\\" id=\\\"order2\\\" name=\\\"order\\\" class=\\\"custom-control-input\\\"  (change)=\\\"onChangeOrder('solutions')\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"order2\\\">Number of solutions</label>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Difficulty</th>\\n          <th scope=\\\"col\\\"># Attempts</th>\\n          <th scope=\\\"col\\\"># Solutions</th>\\n          <th scope=\\\"col\\\"></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let problem of displayedProblems\\\">\\n          <th scope=\\\"row\\\">{{problem.name}}</th>\\n          <td>{{problem.difficulty}}</td>\\n          <td>{{problem.num_attempted}}</td>\\n          <td>{{problem.num_solved}}</td>\\n          <td>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClickRemoveProblem(problem)\\\">Remove</button>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <div style=\\\"position: relative;\\\" *ngIf=\\\"removeResult\\\">\\n        <ngx-ui-loader [loaderId]=\\\"'removeProbLoader'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\n        <div *ngIf=\\\"removeResult.success == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\n          <strong>{{removeResult.msg}}</strong>\\n        </div>\\n        <div *ngIf=\\\"removeResult.success == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\n          <strong>{{removeResult.msg}}</strong>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--\\n        {{selected.solved_percent}}% of users have solved this problem.</p>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProblemService } from '../../services/problem.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Problem } from '../../problem';\nimport { User } from '../../user';\nimport {debounceTime, distinctUntilChanged, max, switchMap} from 'rxjs/operators';\nimport { of, Subject } from 'rxjs';\nimport {Arr} from \"tern\";\nimport {NgxUiLoaderService} from \"ngx-ui-loader\";\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  problems: Array<Problem>;\n  users: Array<User>;\n  numUsers: number;\n  numProblems: number;\n  selected: any;\n  clickedGeneral: boolean;\n  clickedCategories: boolean;\n  displayedProblems: Array<Problem>;\n  displayOrder: string;\n  maxSolutions: number;\n  minSolutions: number;\n  maxProblemsText: string;\n  minProblemsText: string;\n\n  removeResult: any;\n\n  searchUsername: string;\n  searchUsers$: any;\n  selectedUser: any;\n  private userSearchTerms = new Subject<string>();\n  isUserSearchInFocus: boolean;\n  isHoveringUserSearch: boolean;\n\n  searchProblem: string;\n  searchProblems$: any;\n  selectedProblem: any;\n  private problemSearchTerms = new Subject<string>();\n  isProblemSearchInFocus: boolean;\n  isHoveringProblemSearch: boolean;\n\n  addProbName: string;\n  addProbPoints: string;\n  addProbDiff: string;\n  categoryDCL: boolean;\n  categoryEXP: boolean;\n  categoryINT: boolean;\n  categoryCTR: boolean;\n  categorySTR: boolean;\n  categoryMEM: boolean;\n  categoryFIO: boolean;\n  categoryERR: boolean;\n  categoryOOP: boolean;\n  categoryCON: boolean;\n  categoryMSC: boolean;\n  addProbParagraph: string;\n  addProbCode: string;\n  addProbSolCount: Array<number>;\n  addProbSol: string;\n  addProbSols: Array<string>;\n  addProbResult: any;\n\n  constructor(private problemService: ProblemService,\n              private authService: AuthService,\n              private spinnerService: NgxUiLoaderService) { }\n\n  getAllInfo() {\n    this.problemService.getAllProblems().subscribe(problemsWrapper => {\n      this.problems = problemsWrapper.problems;\n      this.numProblems = this.problems.length;\n      this.authService.getAllUsers().subscribe((users) => {\n        this.users = users;\n        this.numUsers = this.users.length;\n        let maxProblems = [];\n        let minProblems = [];\n        this.maxSolutions = null;\n        this.minSolutions = null;\n        for (const problem of this.problems) {\n          if (this.maxSolutions === null || this.maxSolutions < problem.num_solved) {\n            maxProblems = [problem.name];\n            this.maxSolutions = problem.num_solved;\n          } else if (this.maxSolutions === problem.num_solved) {\n            maxProblems.push(problem.name);\n          }\n          if (this.minSolutions === null || this.minSolutions > problem.num_solved) {\n            minProblems = [problem.name];\n            this.minSolutions = problem.num_solved;\n          } else if (this.minSolutions === problem.num_solved) {\n            minProblems.push(problem.name);\n          }\n        }\n        minProblems.sort((name1, name2) => {\n          return (name1 > name2) ? 1 : -1;\n        });\n        maxProblems.sort((name1, name2) => {\n          return (name1 > name2) ? 1 : -1;\n        });\n        this.maxProblemsText = '';\n        for (const name of maxProblems) {\n          if (this.maxProblemsText === '') {\n            this.maxProblemsText += name;\n          } else {\n            this.maxProblemsText += `, ${name}`;\n          }\n        }\n        this.minProblemsText = '';\n        for (const name of minProblems) {\n          if (this.minProblemsText === '') {\n            this.minProblemsText += name;\n          } else {\n            this.minProblemsText += `, ${name}`;\n          }\n        }\n      });\n    });\n  }\n\n  onChangeAddProbDiff(difficulty: string) {\n    this.addProbDiff = difficulty;\n  }\n\n  onAddProbChoice() {\n    this.addProbSols.push(`Choice ${this.addProbSolCount.length + 1}`);\n    this.addProbSolCount.push(this.addProbSolCount.length);\n  }\n\n  onRemoveProbChoice() {\n    if (this.addProbSol !== undefined && this.addProbSol[0] === this.addProbSols[this.addProbSols.length - 1]) {\n      this.addProbSol = undefined;\n    }\n    this.addProbSols.pop();\n    this.addProbSolCount.pop();\n  }\n\n  onSubmitProblem() {\n    window.scroll({\n      top: 2000,\n      behavior: 'smooth'\n    });\n    this.spinnerService.startLoader('addProbSubmitLoader');\n    const re = /[1-9][0-9]*/;\n    if (!this.addProbName.trim() || !this.addProbPoints.trim() || !this.addProbParagraph.trim()) {\n      this.addProbResult = {success: false, msg: 'Failed to add problem. Please fill in all required fields.'};\n      this.spinnerService.stopLoader('addProbSubmitLoader');\n      return;\n    }\n    if (!matchExactRegEx(re, this.addProbPoints.trim())) {\n      this.addProbResult = {success: false, msg: 'Failed to add problem. \\'Points\\' must be a positive integer.'};\n      this.spinnerService.stopLoader('addProbSubmitLoader');\n      return;\n    }\n    if (this.addProbSols.includes('')) {\n      this.addProbResult = {success: false, msg: 'Failed to add problem. Can\\'t have empty choice.'};\n      this.spinnerService.stopLoader('addProbSubmitLoader');\n      return;\n    }\n    if (this.addProbSol === undefined) {\n      this.addProbResult = {success: false, msg: 'Failed to add problem. Please select the correct solution.'};\n      this.spinnerService.stopLoader('addProbSubmitLoader');\n      return;\n    }\n    const category = ['cpp', this.addProbDiff];\n    if (this.categoryDCL) {\n      category.push('DCL');\n    }\n    if (this.categoryEXP) {\n      category.push('EXP');\n    }\n    if (this.categoryINT) {\n      category.push('INT');\n    }\n    if (this.categoryCTR) {\n      category.push('CTR');\n    }\n    if (this.categorySTR) {\n      category.push('STR');\n    }\n    if (this.categoryMEM) {\n      category.push('MEM');\n    }\n    if (this.categoryFIO) {\n      category.push('FIO');\n    }\n    if (this.categoryERR) {\n      category.push('ERR');\n    }\n    if (this.categoryOOP) {\n      category.push('OOP');\n    }\n    if (this.categoryCON) {\n      category.push('CON');\n    }\n    if (this.categoryMSC) {\n      category.push('MSC');\n    }\n    const problemInfo: any = {\n      name: this.addProbName,\n      difficulty: this.addProbDiff,\n      points: Number(this.addProbPoints.trim()),\n      category: category,\n      paragraph: this.addProbParagraph,\n      type: 'close',\n      solutions: this.addProbSols,\n      solution: this.addProbSol[0]\n    };\n    if (this.addProbCode.trim()) {\n      problemInfo.code = this.addProbCode;\n    }\n    this.problemService.addClosedProblem(problemInfo).subscribe((resp) => {\n      this.addProbResult = resp;\n      if (resp.success) {\n        this.getAllInfo();\n      }\n      this.spinnerService.stopLoader('addProbSubmitLoader');\n    });\n  }\n\n  onSearchUser(username: string) {\n    this.userSearchTerms.next(username);\n  }\n\n  onSearchProblem(name: string) {\n    this.problemSearchTerms.next(name);\n  }\n\n  onSelectUser(user: User) {\n    this.selectedUser = user;\n    this.selectedUser.attempts = '';\n    this.selectedUser.solved = '';\n    for (const name in user.attempted_problems) {\n      if (this.selectedUser.attempts === '') {\n        this.selectedUser.attempts += name;\n      } else {\n        this.selectedUser.attempts += `, ${name}`;\n      }\n      if (user.attempted_problems[name].solved) {\n        if (this.selectedUser.solved === '') {\n          this.selectedUser.solved += name;\n        } else {\n          this.selectedUser.solved += `, ${name}`;\n        }\n      }\n    }\n    if (this.selectedUser.attempts === '') {\n      this.selectedUser.attempts = 'None';\n    }\n    if (this.selectedUser.solved === '') {\n      this.selectedUser.solved = 'None';\n    }\n  }\n\n  onSelectProblem(problem: Problem) {\n    this.selectedProblem = problem;\n    this.selectedProblem.solved_percent = ((problem.num_solved * 100) / this.numUsers);\n    this.selectedProblem.type_text = (problem.type === 'open') ? 'Open Problem' : 'Multiple Choice Problem';\n    let totAttempts = 0;\n    this.selectedProblem.solvingUsers = '';\n    if (problem.solved_by !== undefined) {\n      for (let name in problem.solved_by) {\n        if (this.selectedProblem.solvingUsers === '') {\n          this.selectedProblem.solvingUsers += name;\n        } else {\n          this.selectedProblem.solvingUsers += `, ${name}`;\n        }\n        totAttempts += problem.solved_by[name];\n      }\n    }\n    if (this.selectedProblem.solvingUsers === '') {\n      this.selectedProblem.solvingUsers = 'None';\n    }\n    this.selectedProblem.avg_attempts = (problem.num_solved === 0) ? 0 : totAttempts/problem.num_solved;\n  }\n\n  onClickGeneral() {\n    this.clickedGeneral = !this.clickedGeneral;\n  }\n\n  onClickCategories() {\n    this.clickedCategories = !this.clickedCategories;\n  }\n\n  onClickUsers(name) {\n    this.selected.name = name;\n    this.selectedUser = undefined;\n    this.removeResult = undefined;\n  }\n\n  onClickAddProblem(name) {\n    this.removeResult = undefined;\n    this.selected.name = name;\n  }\n\n  onClickProblems(name) {\n    this.selected.name = name;\n    this.selectedProblem = undefined;\n    this.removeResult = undefined;\n  }\n\n  onClickCategory(name) {\n    this.removeResult = undefined;\n    this.doGetCategory(name);\n  }\n\n  doGetCategory(name) {\n    this.displayedProblems = [];\n    this.selected.name = name;\n    const category = this.getCategory(name);\n    this.selected.num_attempted = 0;\n    this.selected.num_solved = 0;\n    for (const problem of this.problems) {\n      if (problem.category.includes(category)) {\n        this.selected.num_attempted += problem.num_attempted;\n        this.selected.num_solved += problem.num_solved;\n        this.displayedProblems.push(problem);\n      }\n    }\n    if (this.displayOrder === 'Number of attempts') {\n      this.displayedProblems.sort((prob1, prob2) => {\n        const dif = (prob2.num_attempted - prob1.num_attempted);\n        if (dif === 0) {\n          return (prob1.name > prob2.name) ? 1 : -1;\n        }\n        return dif;\n      });\n    } else {\n      this.displayedProblems.sort((prob1, prob2) => {\n        const dif = (prob2.num_solved - prob1.num_solved);\n        if (dif === 0) {\n          return (prob1.name > prob2.name) ? 1 : -1;\n        }\n        return dif;\n      });\n    }\n  }\n\n  onChangeOrder(order: string) {\n    if (order === 'attempts') {\n      this.displayOrder = 'Number of attempts';\n      this.displayedProblems.sort((prob1, prob2) => {\n        const dif = (prob2.num_attempted - prob1.num_attempted);\n        if (dif === 0) {\n          return (prob1.name > prob2.name) ? 1 : -1;\n        }\n        return dif;\n      });\n    } else {\n      this.displayOrder = 'Number of solutions';\n      this.displayedProblems.sort((prob1, prob2) => {\n        const dif = (prob2.num_solved - prob1.num_solved);\n        if (dif === 0) {\n          return (prob1.name > prob2.name) ? 1 : -1;\n        }\n        return dif;\n      });\n    }\n  }\n\n  changeUserSearchFocus() {\n    this.isUserSearchInFocus = !this.isUserSearchInFocus;\n  }\n\n  changeUserSearchHover() {\n    this.isHoveringUserSearch = !this.isHoveringUserSearch;\n  }\n\n  changeProblemSearchFocus() {\n    this.isProblemSearchInFocus = !this.isProblemSearchInFocus;\n  }\n\n  changeProblemSearchHover() {\n    this.isHoveringProblemSearch = !this.isHoveringProblemSearch;\n  }\n\n  getCategory(name): string {\n    switch (name) {\n      case 'Declarations and Initialization':\n        return 'DCL';\n      case 'Expressions':\n        return 'EXP';\n      case 'Integers':\n        return 'INT';\n      case 'Containers':\n        return 'CTR';\n      case 'Characters and Strings':\n        return 'STR';\n      case 'Memory Management':\n        return 'MEM';\n      case 'Input Output':\n        return 'FIO';\n      case 'Exceptions and Error Handling':\n        return 'ERR';\n      case 'Object Oriented Programming':\n        return 'OOP';\n      case 'Concurrency':\n        return 'CON';\n      case 'Miscellaneous':\n        return 'MSC';\n    }\n  }\n\n  onClickRemoveProblem(problem: Problem) {\n    window.scroll({\n      top: 2000,\n      behavior: 'smooth'\n    });\n    this.spinnerService.startLoader('removeProbLoader');\n    this.problemService.removeProblem(problem.name).subscribe((result) => {\n      this.removeResult = result;\n      this.getAllInfo();\n      if (this.selected.name === 'Problem Statistics') {\n      } else {\n        this.doGetCategory(this.selected.name);\n      }\n      this.spinnerService.stopLoader('removeProbLoader');\n    });\n  }\n\n  onClickRemoveUser(user: User) {\n    window.scroll({\n      top: 2000,\n      behavior: 'smooth'\n    });\n    this.spinnerService.startLoader('removeUserLoader');\n    this.authService.removeUser(user.username).subscribe((result) => {\n      this.removeResult = result;\n      this.getAllInfo();\n      this.spinnerService.stopLoader('removeUserLoader');\n    });\n  }\n\n  ngOnInit() {\n    this.getAllInfo();\n    this.clickedGeneral = false;\n    this.clickedCategories = false;\n    this.selected = {};\n    this.displayedProblems = [];\n    this.displayOrder = 'Number of attempts';\n\n    this.isHoveringUserSearch = false;\n    this.isUserSearchInFocus = false;\n    this.searchUsers$ = [];\n    this.searchUsers$ = this.userSearchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => {\n        if (!term.trim()) {\n          // if not search term, return empty user array.\n          return of([]);\n        }\n        const result = [];\n        for (const user of this.users) {\n          if (user.username.includes(term)) {\n            result.push(user);\n          }\n        }\n        return of(result);\n      })\n    );\n\n    this.isHoveringProblemSearch = false;\n    this.isProblemSearchInFocus = false;\n    this.searchProblems$ = [];\n    this.searchProblems$ = this.problemSearchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => {\n        if (!term.trim()) {\n          // if not search term, return empty user array.\n          return of([]);\n        }\n        const result = [];\n        for (const problem of this.problems) {\n          if (problem.name.includes(term)) {\n            result.push(problem);\n          }\n        }\n        return of(result);\n      })\n    );\n\n    // Adding problem part initialization\n    this.addProbName = '';\n    this.addProbPoints = '';\n    this.addProbDiff = 'Easy';\n    this.categoryDCL = false;\n    this.categoryEXP = false;\n    this.categoryINT = false;\n    this.categoryCTR = false;\n    this.categorySTR = false;\n    this.categoryMEM = false;\n    this.categoryFIO = false;\n    this.categoryERR = false;\n    this.categoryOOP = false;\n    this.categoryCON = false;\n    this.categoryMSC = false;\n    this.addProbParagraph = '';\n    this.addProbCode = '';\n    this.addProbSolCount = [0, 1, 2, 3];\n    this.addProbSols = ['Choice 1', 'Choice 2', 'Choice 3', 'Choice 4'];\n  }\n}\n\n\nfunction matchExactRegEx(r, str) {\n  const match = str.match(r);\n  return match && str === match[0];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC1wcm9ibGVtL3Rlc3QtcHJvYmxlbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"!completed\\\">\\r\\n  <br/>\\r\\n  <h1 class=\\\"text-center\\\">Problem {{cur_prob+1}} of {{num_problems}}</h1>\\r\\n  <div class=\\\"progress\\\">\\r\\n    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"progress\\\" [style.width.%]=\\\"(num_problems != 0)?(progress*100)/num_problems:10\\\"\\r\\n         aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"num_problems\\\"></div>\\r\\n  </div>\\r\\n  <hr class=\\\"my-4\\\">\\r\\n  <h1>{{(problem === undefined)?'':problem.name}}</h1>\\r\\n  <div *ngIf=\\\"problem?.type==='open'\\\">\\r\\n    <p style=\\\"white-space: pre-wrap;\\\">{{(problem === undefined)?'':problem.paragraph}}</p>\\r\\n    <ngx-codemirror [(ngModel)]=\\\"solution_code\\\"\\r\\n                    [options]=\\\"{\\r\\n                    lineNumbers: true,\\r\\n                    theme: 'material',\\r\\n                    mode: 'text/x-c++src',\\r\\n                    indentUnit: 4,\\r\\n                    indentWithTabs: true,\\r\\n                    autoCloseBrackets: true\\r\\n                  }\\\">{{solution_code}}</ngx-codemirror>\\r\\n    <br/>\\r\\n    <div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitSolution(solution_code)\\\">Submit</button>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <div style=\\\"position: relative; background-color: white; height: 50px; width: 100%\\\">\\r\\n      <ngx-ui-loader [loaderId]=\\\"'testLoader1'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\r\\n      <div *ngIf=\\\"isSuccess == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\r\\n        <strong>{{feedback_msg}}</strong>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isSuccess == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\r\\n        <strong>{{feedback_msg}}</strong>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br *ngIf=\\\"!showNext\\\" />\\r\\n  </div>\\r\\n  <div *ngIf=\\\"problem?.type==='close'\\\">\\r\\n    <p style=\\\"white-space: pre-wrap;\\\">{{problem.paragraph}}</p>\\r\\n    <ngx-codemirror *ngIf=\\\"solution_code\\\" [(ngModel)]=\\\"solution_code\\\"\\r\\n                    [options]=\\\"{\\r\\n                    lineNumbers: true,\\r\\n                    theme: 'material',\\r\\n                    mode: 'text/x-c++src',\\r\\n                    indentUnit: 4,\\r\\n                    indentWithTabs: true,\\r\\n                    readOnly: true\\r\\n                  }\\\">{{solution_code}}</ngx-codemirror>\\r\\n    <br *ngIf=\\\"solution_code\\\"/>\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let sol of problem.solutions\\\" (click)=\\\"onSolveClosed(sol)\\\" class=\\\"change-cursor\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">{{ sol }}</button>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <br/>\\r\\n    <div style=\\\"position: relative; background-color: white; height: 50px; width: 100%\\\">\\r\\n      <ngx-ui-loader [loaderId]=\\\"'testLoader2'\\\" [fgsSize]=\\\"30\\\"></ngx-ui-loader>\\r\\n      <div *ngIf=\\\"isSuccess == true\\\" class=\\\"alert alert-dismissible alert-success\\\">\\r\\n        <strong>{{feedback_msg}}</strong>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isSuccess == false\\\" class=\\\"alert alert-dismissible alert-danger\\\">\\r\\n        <strong>{{feedback_msg}}</strong>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br *ngIf=\\\"!showNext\\\" />\\r\\n  </div>\\r\\n  <div *ngIf=\\\"showNext\\\">\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"nextProblem()\\\">{{nextText}}</button>\\r\\n    </div>\\r\\n    <br/>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"completed\\\">\\r\\n  <br/>\\r\\n  <h1 class=\\\"text-center\\\">Test Results</h1>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\">You solved {{solvedProblems.length}} out of {{num_problems}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Solved Problems: {{solvedText}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Failed Problems: {{unsolvedText}}</li>\\r\\n  </ul>\\r\\n  <br/>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"retakeTest()\\\">Retake Test</button>\\r\\n  </div>\\r\\n  <br/>\\r\\n</div>\\r\\n<ngx-ui-loader></ngx-ui-loader>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../problem';\nimport { ProblemService } from '../../services/problem.service';\nimport { TestService } from '../../services/test.service';\nimport { Router } from '@angular/router';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-test-problem',\n  templateUrl: './test-problem.component.html',\n  styleUrls: ['./test-problem.component.css']\n})\nexport class TestProblemComponent implements OnInit {\n  cur_prob: number;\n  progress: number;\n  problems: Problem[];\n  problem: Problem;\n  solution_code: string;\n  isSuccess: any;\n  feedback_msg: any;\n  num_problems: number;\n  filters: Array<string>;\n  unsolvedProblems: string[];\n  solvedProblems: string[];\n  showNext: boolean;\n  completed: boolean;\n  nextText: string;\n  solvedText: string;\n  unsolvedText: string;\n\n  constructor(private problemService: ProblemService,\n              private testService: TestService,\n              private router: Router,\n              private spinnerService: NgxUiLoaderService) { }\n\n  ngOnInit() {\n    this.completed = false;\n    this.showNext = false;\n    this.cur_prob = 0;\n    this.progress = 0;\n    this.unsolvedProblems = [];\n    this.solvedProblems = [];\n    this.num_problems = this.testService.getNumProblems();\n    this.filters = this.testService.getFilters();\n    this.nextText = 'Next Problem';\n    this.problemService.getAllProblems().subscribe((problemsArr) => {\n      const allProblems = problemsArr.problems;\n      const filteredProblems = [];\n      for (const problem of allProblems) {\n        let hasCategory = false;\n        if (this.filters.length === 0) {\n          hasCategory = true;\n        } else {\n          for (const category of this.filters) {\n            if (problem.category.includes(category)) {\n              hasCategory = true;\n              break;\n            }\n          }\n        }\n        if (hasCategory){\n          filteredProblems.push(problem);\n        }\n      }\n      this.shuffle(filteredProblems);\n      this.problems = filteredProblems;\n      if (this.problems.length === 0){\n        this.router.navigate(['/test']);\n        return;\n      }\n      this.num_problems = Math.min(this.num_problems, this.problems.length);\n      this.problem = this.problems[0];\n      if (this.problem.code !== undefined) {\n        this.solution_code = this.problem.code;\n      }\n    });\n  }\n\n  /**\n   * Shuffles array in place. ES6 version\n   * @param {Array} arr items An array containing the items.\n   */\n  private shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  onSubmitSolution(submitted_code: string){\n    if (!this.showNext) {\n      this.spinnerService.startLoader('testLoader1');\n      window.scroll({\n        top: 1000,\n        behavior: 'smooth'\n      });\n      this.problemService.checkOpenSolutionInTest(this.problem.name, submitted_code).subscribe((res) => {\n        this.spinnerService.stopLoader('testLoader1');\n        this.isSuccess = res.success;\n        this.feedback_msg = res.msg;\n        if (this.feedback_msg !== 'Compilation Error!') {\n          this.showNext = true;\n          this.progress++;\n          if (this.progress === this.num_problems) {\n            this.nextText = 'See Results';\n          }\n          if (this.isSuccess) {\n            this.solvedProblems.push(this.problem.name);\n          }\n          if (this.feedback_msg === 'Incorrect Solution!') {\n            this.unsolvedProblems.push(this.problem.name);\n          }\n        }\n      });\n    }\n  }\n\n  onSolveClosed(solution: string) {\n    if (!this.showNext) {\n      this.spinnerService.startLoader('testLoader2');\n      window.scroll({\n        top: 1000,\n        behavior: 'smooth'\n      });\n      this.problemService.checkCloseSolutionInTest(this.problem.name, solution).subscribe((res) => {\n        this.spinnerService.stopLoader('testLoader2');\n        this.showNext = true;\n        this.isSuccess = res.success;\n        this.feedback_msg = res.msg;\n        this.progress++;\n        if (this.progress === this.num_problems) {\n          this.nextText = 'See Results';\n        }\n        if (this.isSuccess) {\n          this.solvedProblems.push(this.problem.name);\n        }\n        if (this.feedback_msg === 'Incorrect!') {\n          this.unsolvedProblems.push(this.problem.name);\n        }\n      });\n    }\n  }\n\n  retakeTest() {\n    this.completed = false;\n    this.showNext = false;\n    this.cur_prob = 0;\n    this.progress = 0;\n    this.nextText = 'Next Problem';\n    this.unsolvedProblems = [];\n    this.solvedProblems = [];\n    this.problem = this.problems[0];\n    if (this.problem.code !== undefined) {\n      this.solution_code = this.problem.code;\n    }\n  }\n\n  nextProblem() {\n    this.isSuccess = undefined;\n    this.feedback_msg = undefined;\n    this.solution_code = undefined;\n    this.showNext = false;\n    if (this.progress === this.num_problems) {\n      this.solvedText = (this.solvedProblems.length === 0) ? 'None' : this.solvedProblems.toString();\n      this.unsolvedText = (this.unsolvedProblems.length === 0) ? 'None' : this.unsolvedProblems.toString();\n      this.completed = true;\n    } else {\n      this.cur_prob += 1;\n      this.problem = this.problems[this.cur_prob];\n      if (this.problem.code !== undefined) {\n        this.solution_code = this.problem.code;\n      }\n    }\n  }\n}\n","module.exports = \".page-header{\\r\\n  text-align: center;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.subheader{\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.custom-checkbox{\\r\\n  float: left;\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\\r\\n.num-questions-form{\\r\\n  width: 200px;\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5zdWJoZWFkZXJ7XHJcbiAgbWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLmN1c3RvbS1jaGVja2JveHtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuLm51bS1xdWVzdGlvbnMtZm9ybXtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<br/>\\n<div class=\\\"jumbotron\\\" style=\\\"border-color: black; border-style: dotted; border-radius: 5px\\\">\\n  <h2 class=\\\"page-header\\\">Setup Test</h2>\\n  <hr class=\\\"my-4\\\">\\n  <h4 class=\\\"subheader\\\">Select the categories of the test:</h4>\\n  <div class=\\\"filters\\\">\\n    <fieldset>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category1\\\" [(ngModel)]=\\\"filterDCL\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category1\\\">Declarations and Initialization</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category2\\\" [(ngModel)]=\\\"filterEXP\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category2\\\">Expressions</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category3\\\" [(ngModel)]=\\\"filterINT\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category3\\\">Integers</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category4\\\" [(ngModel)]=\\\"filterCTR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category4\\\">Containers</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category5\\\" [(ngModel)]=\\\"filterSTR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category5\\\">Characters and Strings</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category6\\\" [(ngModel)]=\\\"filterMEM\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category6\\\">Memory Management</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category7\\\" [(ngModel)]=\\\"filterFIO\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category7\\\">Input Output</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category8\\\" [(ngModel)]=\\\"filterERR\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category8\\\">Exceptions and Error Handling</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category9\\\" [(ngModel)]=\\\"filterOOP\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category9\\\">Object Oriented Programming</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category10\\\" [(ngModel)]=\\\"filterCON\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category10\\\">Concurrency</label>\\n        </div>\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"category11\\\" [(ngModel)]=\\\"filterMSC\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"category11\\\">Miscellaneous</label>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n  <h4 class=\\\"subheader\\\">Select number of problems:</h4>\\n  <div class=\\\"form-group num-questions-form\\\">\\n    <select [(ngModel)]=\\\"numProblems\\\" class=\\\"custom-select\\\">\\n      <option value=\\\"5\\\">5</option>\\n      <option value=\\\"10\\\">10</option>\\n      <option value=\\\"15\\\">15</option>\\n    </select>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n  <div class=\\\"text-center\\\">\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"startTest()\\\">Start Test!</a>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../../services/test.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  filterDCL: boolean;\n  filterINT: boolean;\n  filterEXP: boolean;\n  filterCTR: boolean;\n  filterSTR: boolean;\n  filterMEM: boolean;\n  filterFIO: boolean;\n  filterERR: boolean;\n  filterOOP: boolean;\n  filterCON: boolean;\n  filterMSC: boolean;\n  numProblems: number;\n\n  constructor(private testService: TestService,\n              private router: Router) { }\n\n  startTest() {\n    const filters = [];\n    if (this.filterDCL) {\n      filters.push('DCL');\n    }\n    if (this.filterINT) {\n      filters.push('INT');\n    }\n    if (this.filterEXP) {\n      filters.push('EXP');\n    }\n    if (this.filterCTR) {\n      filters.push('CTR');\n    }\n    if (this.filterSTR) {\n      filters.push('STR');\n    }\n    if (this.filterMEM) {\n      filters.push('MEM');\n    }\n    if (this.filterFIO) {\n      filters.push('FIO');\n    }\n    if (this.filterERR) {\n      filters.push('ERR');\n    }\n    if (this.filterOOP) {\n      filters.push('OOP');\n    }\n    if (this.filterCON) {\n      filters.push('CON');\n    }\n    if (this.filterMSC) {\n      filters.push('MSC');\n    }\n    this.testService.beginTest(this.numProblems, filters);\n    this.router.navigate(['/test/problem']);\n  }\n\n  ngOnInit() {\n    this.filterDCL = false;\n    this.filterINT = false;\n    this.filterEXP = false;\n    this.numProblems = 10;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAdmin()){\r\n      return true;\r\n    } else{\r\n      if(this.authService.isLoggedIn()){\r\n        this.router.navigate(['/problems']);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isLoggedIn()){\r\n      return true;\r\n    } else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { TestService } from \"../services/test.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestGuard implements CanActivate{\r\n  constructor(private authService: AuthService,\r\n              private testService: TestService,\r\n              private router: Router) { }\r\n\r\n  canActivate(){\r\n    if(this.testService.isTakingTest()){\r\n      return true;\r\n    } else{\r\n      if(this.authService.isLoggedIn()){\r\n        this.router.navigate(['/test']);\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of, Observable } from \"rxjs\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from \"../user\";\nimport {StandardResp} from \"./problem.service\";\n\nconst helper = new JwtHelperService();\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nexport interface CountResp {\n  num_users: number;\n}\n\nexport interface Resp1 {\n  success: boolean;\n  msg: string;\n}\n\nexport interface AuthResp {\n  success: boolean;\n  msg: string;\n  token: string;\n  user: {\n    id: string,\n    name: string,\n    username: string,\n    email: string\n  };\n}\n\nexport interface ProfileResp {\n  user: {\n    name: string,\n    username: string,\n    email: string,\n    attempted_problems: Object,\n    num_solved: number,\n    num_attempted: number,\n    total_points: number,\n    join_date: string\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user): Observable<StandardResp>{\n    return this.http.post<StandardResp>('http://localhost:3000/users/register', user, httpOptions);\n  }\n\n  authenticateUser(user): Observable<AuthResp>{\n    return this.http.post<AuthResp>('http://localhost:3000/users/authenticate', user, httpOptions);\n  }\n\n  getProfile(): Observable<ProfileResp>{\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProfileResp>('http://localhost:3000/users/profile', httpOptions);\n  }\n\n  getUserInfo(username: string): Observable<ProfileResp>{\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<ProfileResp>(`http://localhost:3000/users/getUser/${username}`, httpOptions);\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    const token = localStorage.getItem('id_token');\n    return token !== null && !helper.isTokenExpired(token);\n  }\n\n  getToken(){\n    return localStorage.getItem('id_token');\n  }\n\n  getTokenUser(){\n    this.loadToken();\n    if (this.authToken != null) {\n      const user = helper.decodeToken(this.authToken);\n      return user.username;\n    } else {\n      return \"\";\n    }\n  }\n\n  isAdmin(){\n    this.loadToken();\n    if (this.authToken != null) {\n      const user = helper.decodeToken(this.authToken);\n      return user.isAdmin;\n    } else {\n      return false;\n    }\n  }\n\n  loadToken(){\n    this.authToken = localStorage.getItem('id_token');\n  }\n\n  logout(){\n    this.authToken = null;\n    localStorage.clear();\n  }\n\n  getNumUsers(){\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<CountResp>('http://localhost:3000/users/getNumUsers', httpOptions);\n  }\n\n  getAllUsers(){\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<User[]>('http://localhost:3000/users/getAllUsers', httpOptions);\n  }\n\n  searchUsers(term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty user array.\n      return of([]);\n    }\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json' })\n    };\n    return this.http.get<User[]>(`http://localhost:3000/users/search/${term}`, httpOptions);\n  }\n\n  removeUser(username): Observable<StandardResp> {\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({'Authorization': this.authToken, 'Content-Type': 'application/json' })\n    };\n    const userRequest = {\n      username: username\n    };\n    return this.http.post<StandardResp>(`http://localhost:3000/users/removeUser`, userRequest, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Problem } from \"../problem\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\nexport interface ProblemsResp {\r\n  problems: Problem[];\r\n}\r\n\r\nexport interface ProblemResp {\r\n  problem: Problem;\r\n}\r\n\r\nexport interface StandardResp {\r\n  success: boolean;\r\n  msg: string;\r\n}\r\n\r\nconst problemsUrl = 'http://localhost:3000/problems';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProblemService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private authService: AuthService) { }\r\n\r\n  getAllProblems(): Observable<ProblemsResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.get<ProblemsResp>(`${problemsUrl}/getAllProblems`, httpOptions);\r\n  }\r\n\r\n  getLanguageProblems(language: string): Observable<ProblemsResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.get<ProblemsResp>(`${problemsUrl}/getLanguageProblems/${language}`, httpOptions);\r\n  }\r\n\r\n  getProblem(name: string): Observable<ProblemResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.get<ProblemResp>(`${problemsUrl}/getProblem/${name}`, httpOptions);\r\n  }\r\n\r\n  checkOpenSolutionAndUpdateCounters(name: string, solution: string): Observable<StandardResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    const problemRequest = {\r\n      name: name,\r\n      solution: solution\r\n    };\r\n    return this.http.post<StandardResp>(`${problemsUrl}/checkProblemSolution`, problemRequest, httpOptions);\r\n  }\r\n\r\n  checkOpenSolutionInTest(name: string, solution: string): Observable<StandardResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    const problemRequest = {\r\n      name: name,\r\n      solution: solution\r\n    };\r\n    return this.http.post<StandardResp>(`${problemsUrl}/checkTestSolution`, problemRequest, httpOptions);\r\n  }\r\n\r\n  checkCloseSolutionInTest(name: string, solution: string): Observable<StandardResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    const problemRequest = {\r\n      name: name,\r\n      solution: solution\r\n    };\r\n    return this.http.post<StandardResp>(`${problemsUrl}/checkClosedTestSolution`, problemRequest, httpOptions);\r\n  }\r\n\r\n  checkCloseProblemSolution(name: string, solution: string): Observable<StandardResp>{\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    const problemRequest = {\r\n      name: name,\r\n      solution: solution\r\n    };\r\n    return this.http.post<StandardResp>(`${problemsUrl}/checkClosedProblemSolution`, problemRequest, httpOptions);\r\n  }\r\n\r\n  addClosedProblem(problemInfo): Observable<StandardResp> {\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n\r\n    return this.http.post<StandardResp>(`${problemsUrl}/addClosedProblem`, problemInfo, httpOptions);\r\n  }\r\n\r\n  removeProblem(name): Observable<StandardResp> {\r\n    const authToken = this.authService.getToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({'Authorization': authToken, 'Content-Type': 'application/json' })\r\n    };\r\n    const problemRequest = {\r\n      name: name\r\n    };\r\n    return this.http.post<StandardResp>(`${problemsUrl}/removeProblem`, problemRequest, httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Problem } from \"../problem\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n  takingTest: boolean;\n  num_problems: number;\n  filters: Array<string>;\n\n  constructor() { }\n\n  beginTest(num_problems: number, filters: Array<string>){\n    this.takingTest = true;\n    this.num_problems = num_problems;\n    this.filters = filters;\n  }\n\n  getNumProblems(): number{\n    return this.num_problems;\n  }\n\n  getFilters(): Array<string>{\n    return this.filters;\n  }\n\n  isTakingTest(){\n    return (this.takingTest === true);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    return !(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined\n      || user.name == '' || user.username == '' || user.email == '' || user.password == '');\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}